{
    "docs": [
        {
            "location": "/", 
            "text": "Citrix StoreFront Store Services API\n\n\nThe purpose of this document is to specify the API for the Store Services, also known as Resource Services, that are used for retrieving information about resources published from: XenApp, XenDesktop, VDI-in-a-Box, AppController, ShareFile, and other resource providers.\n\n\nOverview\n\n\nThe Store Services, are part of the StoreFront Services and allow clients to access resources available from various back-end providers. Examples of resources include: apps, including mobile apps, desktops, documents, etc. These services allow remote clients to access these resources, query their properties and perform various actions on those resources, such as:\n\n\n\n\nEnumerate and aggregate the resources from various servers, with load-balancing and failover support for XenApp and XenDesktop farms with multiple controllers.\n\n\nLaunch apps or desktops remotely using the ICA or RDP protocols.\n\n\nLaunch streamed apps\n\n\nLaunch mobile apps on appropriate clients.\n\n\nPower Off certain XenDesktop desktops.\n\n\nRetrieve images and icons for resources.\n\n\nSubscription to resources, allowing different clients to store data associated with a subscribed resource.\n\n\n\n\nAdditionally there are end-point, account and discovery services to aid the client in locating the various services available in a StoreFront installation.\n\n\nReferences\n\n\n[1] Hypertext Transfer Protocol \u2013 HTTP/1.1: \nhttp://tools.ietf.org/html/rfc\n\n\n[2] HTTP Authentication: Basic and Digest Access Authentication: \nhttp://www.ietf.org/rfc/rfc2617.txt\n\n\n[3] CitrixAuth Authentication Scheme v1.", 
            "title": "Scope"
        }, 
        {
            "location": "/#citrix-storefront-store-services-api", 
            "text": "The purpose of this document is to specify the API for the Store Services, also known as Resource Services, that are used for retrieving information about resources published from: XenApp, XenDesktop, VDI-in-a-Box, AppController, ShareFile, and other resource providers.", 
            "title": "Citrix StoreFront Store Services API"
        }, 
        {
            "location": "/#overview", 
            "text": "The Store Services, are part of the StoreFront Services and allow clients to access resources available from various back-end providers. Examples of resources include: apps, including mobile apps, desktops, documents, etc. These services allow remote clients to access these resources, query their properties and perform various actions on those resources, such as:   Enumerate and aggregate the resources from various servers, with load-balancing and failover support for XenApp and XenDesktop farms with multiple controllers.  Launch apps or desktops remotely using the ICA or RDP protocols.  Launch streamed apps  Launch mobile apps on appropriate clients.  Power Off certain XenDesktop desktops.  Retrieve images and icons for resources.  Subscription to resources, allowing different clients to store data associated with a subscribed resource.   Additionally there are end-point, account and discovery services to aid the client in locating the various services available in a StoreFront installation.", 
            "title": "Overview"
        }, 
        {
            "location": "/#references", 
            "text": "[1] Hypertext Transfer Protocol \u2013 HTTP/1.1:  http://tools.ietf.org/html/rfc  [2] HTTP Authentication: Basic and Digest Access Authentication:  http://www.ietf.org/rfc/rfc2617.txt  [3] CitrixAuth Authentication Scheme v1.", 
            "title": "References"
        }, 
        {
            "location": "/general-behavior/", 
            "text": "General Behavior\n\n\nContent Negotiation\n\n\nThe service shall respect the response format specified through the HTTP Accept header. If multiple such headers are supplied,\nthe first understood value is used.\n\n\nIf no supplied Accept header is recognised a HTTP 406 (\u2018Not Acceptable\u2019) response is returned.\n\n\nIf no Accept header is sent, this is interpreted as */* in line with the HTTP/1.1 specification [1].\n\n\nAuthentication\n\n\nSome end-points are protected and require authentication information to allow access. If the required authentication information is not present, then the client will be challenged for authentication using an approach similar to that described by RFC2617 [2]. Full details of this mechanism can be found in the CitrixAuth Scheme document [3], including the reasons why authentication information may be required.\n\n\nThe Client should be prepared to respond to a challenge at any point, and in particular both Enumeration and Launch requests may require the client to obtain fresh authentication information.\n\n\nLocalisation\n\n\nIn the case where a localised string is to be returned, the value specified in the Accept-Language header, shall be used where possible. If no value is specified in the header, then the default language shall be used.\n\n\nHypermedia Control and Parameterised URLs\n\n\nThis API uses the concept of hypermedia controls, where links to resources and actions are obtained from the server, either from the end-points service or directly as the result of calling this API. This means that at no time should clients construct URLs.\n\n\nIn this document various parameterised URLs are discussed, such as /resources/{id}. It is important to note that these are indicative only, and again, the client code should not construct URLs directly. Instead, all parameterised URLs should be obtained from the service itself, for example the URL for a particular resource should be extracted from the Xml returned from the request to /resources/v2/.\n\n\nIn some cases (indicated in the relevant sections) additional parameters can be supplied to a service that is invoked by a GET HTTP request. These parameters are supplied to the service by adding query string parameters to the base service URL. Clients should not make assumptions on the form of the service URL, which may vary with different releases or within a single release depending on the particular circumstances. In particular clients should not make assumptions about the presence or non-presence of query string parameters in the base service URL and should determine in each case whether new parameters should be appended with \u2018?\u2019 or \u2018\n\u2019.\n\n\nBackwards and Forwards Compatibility\n\n\nThe Store services are intended to be backwards and forwards compatible in the following ways:\n\n\n\n\nA client consuming this version of the Store service should be able to consume future versisons of the store without requiring changes.\n\n\n\n\nA client written to consume future versions of the Store should be able to consume this version, with possible degradation of service, unless it requires some future capabilities added in a later version.\n\n\nIn order to achieve this there are some restrictions that the client must follow:\n\n\n\n\n\n\nMost of the URLs supplied in this document are marked as for illustration only and should not be hardcoded within clients. These URLs can be obtained from other starting URLs which are defined relative to the hosting server or Store. For this release, these are:\n\n\n\n\nAccounts service: defined relative to host.\n\n\nDiscovery Service: defined relative to the hosting Store. \n\n\nEndpoints Service: defined relative to the hosting Store. \n\n\nUse the endpoints service to identify URLs (the endpoint id and capabilities of each service are listed in this document).\n\n\nUse the HTTP Accepts header to indicate which version of a response is required, avoid wildcards and ask explicitly for the content-types the client understands; ideally including older content-types for greater backwards compatibility. In the future, if the responses to certain services are changed significantly, then new schema and associated content-type will be defined. The Accepts header of the HTTP request will be used to determine which version(s) of the response the client is able to handle and typically the most recent of those will be returned. For example, consider a service with 2 versions with associated content types v1 and v2:\n\n\n\n\n\n\nAn older client written when only v1 existed would request the content-type v1 and so receive the older v1 format which it understands.\n\n\nA newer client with backwards 7ompatibility would request both v2 and v1 (in that order). Speaking to an older server it would get back the older v1 format, to a newer server the newer v2 format.\n\n\nA newer client written without concerns for compatibility back to the older format would just request v2. It would work with newer servers, but not older servers where it would receive an HTTP 406 error response.\n\n\nA \u2018badly written\u2019 older client which understood only the v1 format, but used */* as its accepts header, would work with older servers, but with newer servers it would receive a v2 format response which it would fail to parse.\n\n\nIgnore unexpected extra elements or values in returned Xml. The schemas supplied in this specification should not be taken to preclude future versions from including extra elements. Where changes are significant, and not merely the addition of elements or attributes, new schemas and content types will be defined.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nClient Name, Client Address and Device Id\n\n\nThe client name and device id parameters are passed to a variety of individual Store services. These values are required for workspace control to function correctly. It is important that the client pass consistent data for these parameters to all services that take these parameters. For StoreFront versions up to and including 2.3 it is strongly encouraged that clients supply a value for both parameters. The client name should be the hostname of the client machine. The device id should be a value unique to the client device, eg the hostname, the same as the client name value. For clients unable to determine the local hostname, eg clients running within browsers with limited access to the client device OS, a random string, ideally persisted between sessions, is a possible approach.\n\n\nIf multiple clients are run on a single device, but use different client name or device id values, then they will be treated by the Store services as running on separate devices which may lead to apps disappearing and reappearing when performing session operations, e.g. querying and reconnecting to sessions.\n\n\nThe client address value identifies the client ip address and may be used on some XenApp/XenDesktop systems to determine whether a client should be presented with a particular resource. It may also be used to determine the best worker to be used to service a launch request. StoreFront will also use the HTTP request headers to identify the client ip address automatically if no explicit value is supplied. As for client name and device id, it is important that clients supply consistent client address parameters for all services.\n\n\nNote\n: For StoreFront 2.0 a number of services have had client name and address parameters added, either as query strings or as XML elements in the POSTed data.", 
            "title": "General Behavior"
        }, 
        {
            "location": "/general-behavior/#general-behavior", 
            "text": "", 
            "title": "General Behavior"
        }, 
        {
            "location": "/general-behavior/#content-negotiation", 
            "text": "The service shall respect the response format specified through the HTTP Accept header. If multiple such headers are supplied,\nthe first understood value is used.  If no supplied Accept header is recognised a HTTP 406 (\u2018Not Acceptable\u2019) response is returned.  If no Accept header is sent, this is interpreted as */* in line with the HTTP/1.1 specification [1].", 
            "title": "Content Negotiation"
        }, 
        {
            "location": "/general-behavior/#authentication", 
            "text": "Some end-points are protected and require authentication information to allow access. If the required authentication information is not present, then the client will be challenged for authentication using an approach similar to that described by RFC2617 [2]. Full details of this mechanism can be found in the CitrixAuth Scheme document [3], including the reasons why authentication information may be required.  The Client should be prepared to respond to a challenge at any point, and in particular both Enumeration and Launch requests may require the client to obtain fresh authentication information.", 
            "title": "Authentication"
        }, 
        {
            "location": "/general-behavior/#localisation", 
            "text": "In the case where a localised string is to be returned, the value specified in the Accept-Language header, shall be used where possible. If no value is specified in the header, then the default language shall be used.", 
            "title": "Localisation"
        }, 
        {
            "location": "/general-behavior/#hypermedia-control-and-parameterised-urls", 
            "text": "This API uses the concept of hypermedia controls, where links to resources and actions are obtained from the server, either from the end-points service or directly as the result of calling this API. This means that at no time should clients construct URLs.  In this document various parameterised URLs are discussed, such as /resources/{id}. It is important to note that these are indicative only, and again, the client code should not construct URLs directly. Instead, all parameterised URLs should be obtained from the service itself, for example the URL for a particular resource should be extracted from the Xml returned from the request to /resources/v2/.  In some cases (indicated in the relevant sections) additional parameters can be supplied to a service that is invoked by a GET HTTP request. These parameters are supplied to the service by adding query string parameters to the base service URL. Clients should not make assumptions on the form of the service URL, which may vary with different releases or within a single release depending on the particular circumstances. In particular clients should not make assumptions about the presence or non-presence of query string parameters in the base service URL and should determine in each case whether new parameters should be appended with \u2018?\u2019 or \u2018 \u2019.", 
            "title": "Hypermedia Control and Parameterised URLs"
        }, 
        {
            "location": "/general-behavior/#backwards-and-forwards-compatibility", 
            "text": "The Store services are intended to be backwards and forwards compatible in the following ways:   A client consuming this version of the Store service should be able to consume future versisons of the store without requiring changes.   A client written to consume future versions of the Store should be able to consume this version, with possible degradation of service, unless it requires some future capabilities added in a later version.  In order to achieve this there are some restrictions that the client must follow:    Most of the URLs supplied in this document are marked as for illustration only and should not be hardcoded within clients. These URLs can be obtained from other starting URLs which are defined relative to the hosting server or Store. For this release, these are:   Accounts service: defined relative to host.  Discovery Service: defined relative to the hosting Store.   Endpoints Service: defined relative to the hosting Store.   Use the endpoints service to identify URLs (the endpoint id and capabilities of each service are listed in this document).  Use the HTTP Accepts header to indicate which version of a response is required, avoid wildcards and ask explicitly for the content-types the client understands; ideally including older content-types for greater backwards compatibility. In the future, if the responses to certain services are changed significantly, then new schema and associated content-type will be defined. The Accepts header of the HTTP request will be used to determine which version(s) of the response the client is able to handle and typically the most recent of those will be returned. For example, consider a service with 2 versions with associated content types v1 and v2:    An older client written when only v1 existed would request the content-type v1 and so receive the older v1 format which it understands.  A newer client with backwards 7ompatibility would request both v2 and v1 (in that order). Speaking to an older server it would get back the older v1 format, to a newer server the newer v2 format.  A newer client written without concerns for compatibility back to the older format would just request v2. It would work with newer servers, but not older servers where it would receive an HTTP 406 error response.  A \u2018badly written\u2019 older client which understood only the v1 format, but used */* as its accepts header, would work with older servers, but with newer servers it would receive a v2 format response which it would fail to parse.  Ignore unexpected extra elements or values in returned Xml. The schemas supplied in this specification should not be taken to preclude future versions from including extra elements. Where changes are significant, and not merely the addition of elements or attributes, new schemas and content types will be defined.", 
            "title": "Backwards and Forwards Compatibility"
        }, 
        {
            "location": "/general-behavior/#client-name-client-address-and-device-id", 
            "text": "The client name and device id parameters are passed to a variety of individual Store services. These values are required for workspace control to function correctly. It is important that the client pass consistent data for these parameters to all services that take these parameters. For StoreFront versions up to and including 2.3 it is strongly encouraged that clients supply a value for both parameters. The client name should be the hostname of the client machine. The device id should be a value unique to the client device, eg the hostname, the same as the client name value. For clients unable to determine the local hostname, eg clients running within browsers with limited access to the client device OS, a random string, ideally persisted between sessions, is a possible approach.  If multiple clients are run on a single device, but use different client name or device id values, then they will be treated by the Store services as running on separate devices which may lead to apps disappearing and reappearing when performing session operations, e.g. querying and reconnecting to sessions.  The client address value identifies the client ip address and may be used on some XenApp/XenDesktop systems to determine whether a client should be presented with a particular resource. It may also be used to determine the best worker to be used to service a launch request. StoreFront will also use the HTTP request headers to identify the client ip address automatically if no explicit value is supplied. As for client name and device id, it is important that clients supply consistent client address parameters for all services.  Note : For StoreFront 2.0 a number of services have had client name and address parameters added, either as query strings or as XML elements in the POSTed data.", 
            "title": "Client Name, Client Address and Device Id"
        }, 
        {
            "location": "/resource-enumeration/", 
            "text": "Resource Enumeration\n\n\nRequest\n\n\n\n\n\n\n\n\nURL \n(indicative only)\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n/resources/v2/ /resources/v2/withoutautoprovision (see Endpoints section)\n\n\nGET\n\n\nReturns a list of all resources available for the user in resources Xml format, with or without auto-provision.\n\n\n\n\n\n\n/resources/v2/{id}\n\n\nGET\n\n\nReturns the details of specified resource in resource Xml format. This URL is given for illustrative purposes. The actual URL should be obtained from the enumeration result returned by the request to /resources/v2/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nURL parameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n{id}\n\n\nThe identifier of the resource. This is unique to the instance of the service.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuery string parameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngroup\n\n\nAllows the requester to specify which resource elements should be returned by the enumeration. Rather than specify the elements individually, \u2018groups\u2019 are defined which give a group name associated with a collection of elements names (the mechanism by which groups are defined is not described here). \n The default value (if no group is specified) is \u2018\nall\n\u2019. The \u2018\nall\n\u2019 group corresponds to requesting all available elements.  \n Group names are matched regardless of case. Unrecognized group names are ignored. If multiple groups are specified then the union of the elements for each group is used. Multiple groups can be requested using multiple group parameters e.g. to request all elements in either the \ncore\n or \nsub\n groups: .../resources/v2/?group=core\ngroup=sub. \n  The id element is always returned. If one or more groups are specified, but none of the group names are recognized, then resources containing just the id element will be returned. \n See below for the default groups defined. This set of groups may be increased by Citrix or 3rd- party extensions in the future (the mechanisms for this extension are not discussed here). Note, however, that groups extensions will not be allowed to change the elements associated with a group.\n\n\n\n\n\n\nsubscriptionStatus\n\n\nAllows the requester to specify that only resources with a specified set of status values should be returned. Multiple status values can be requested using multiple subscriptionStatus parameters. If no subscriptionStatus is supplied, resources are returned regardless of subscription status. \n The valid values are those defined in the subscription schema for the subscriptionStatus element (see /Schemas/Subscriptions.xsd).\n\n\n\n\n\n\nscope\n\n\nAllows the scope to be specified (a concept in the Nfuse protocol). \n Only a limited set of allowed values will be permitted. Other values will result in a HTTP 400 (Bad Request) response. The value check will be case-insensitive, although the value passed on to the underlying system will be of the defined case. \n Allowed values: \n$PRELAUNCH$ \n and \n $ANONYMOUS_PRELAUNCH$ \n - As defined by the pre-launch optimizations for PNAgent. \nThe scope value will be passed in the Nfuse RequestAppData made to XenApp/XenDesktop.\n\n\n\n\n\n\nclientName, clientAddress\n\n\nSee Client Name, Client Address and Device Id section above.\n\n\n\n\n\n\n\n\nNotes\n:\n\n\n\n\nThese requests require an Authorisation token\n\n\nThe URL for a request for a specific resource (i.e. /resources/v2/{id}) is obtained from the Response to resource enumeration (i.e. /resources/v2/).\n\n\nIn all cases, for each request, the service will perform a fresh enumeration for the user and so will pick up any changes.\n\n\nGroup and subscriptionStatus query string parameters can be applied in any combination (both, either, neither) and order.\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nResponse Code\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200\n\n\nSuccess\n\n\n\n\n\n\n401\n\n\nBad/Missing security token (see CitrixAuth Authentication Scheme document [3] )\n\n\n\n\n\n\n404\n\n\nNo resource available for the specified {id} parameter (the resource may not exist or access to it may not be authorized for the requesting user).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse Format\n\n\nRequest Accept /Response Content-Type Header\n\n\n\n\n\n\n\n\n\n\nResources Xml format\n\n\napplication/vnd.citrix.resources+xml\n\n\n\n\n\n\nResource Xml format\n\n\napplication/vnd.citrix.resource+xml\n\n\n\n\n\n\n\n\nThe resources Xml format allows for extensions. The default Store service with no 3rd-party extensions will have the following elements which shall exist in the [http://citrix.com/delivery-services/2-0/resources] (\u2018res:\u2019) and [http://citrix.com/delivery-services/2-0/subscriptions] (\u2018sub:\u2019) namespaces.\n\n\n\n\n\n\n\n\nExtension element\n\n\nGroup(s)\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nres:id\n\n\nn/a\n\n\nAn identifier that is unique across this instance of the resources service. This value is always returned in resources regardless of specified groups.\n\n\n\n\n\n\nRes:title\n\n\ncore\n\n\nThe user friendly name of the resource.\n\n\n\n\n\n\nRes:link\n\n\ncore, status\n\n\nThe url to request the resource\u2019s details.\n\n\n\n\n\n\nRes:summary\n\n\ncore\n\n\nA longer text description of the resource.\n\n\n\n\n\n\nRes:path\n\n\ncore\n\n\nThe path defined in the XenApp/XenDesktop Farm for the resource\n\n\n\n\n\n\nres:resourcetype\n\n\ncore\n\n\nA string identifying the type of the resource. If no extensions are installed, this will be one of the values \n\u2018Citrix.MPS.Application\u2019\n, \n\u2018Citrix.MPS.Desktop\u2019\n or \n\u2018Citrix.MPS.Document\u2019\n.\n\n\n\n\n\n\nres:playsfiletypes\n\n\nfta\n\n\nA list of file extensions supported by the resource [Application only]\n\n\n\n\n\n\nres:contentlocation\n\n\nlaunch\n\n\nThe location (UNC or URL) of the content of a document resource. [Document only]\n\n\n\n\n\n\nres:clienttypes\n\n\ncore\n\n\nA value identifying the clients supported for launches. Known values include:\n \n\u2018ica30\u2019\n, \n\u2018rade\u2019\n, \n\u2018rdp\u2019\n (XenApp/XenDesktop), \n\u2018application/ios\u2019\n, \n\u2018application/android\u2019\n(AppController), \n\u2018g2m\u2019\n, \n\u2018g2t\u2019\n, etc (Citrix Online Integration using Generic applications). \nFuture releases of the Store Service or using future versions of XenApp, XenDesktop or AppController may return additional values.\n\n\n\n\n\n\nRes:rade\n\n\nlaunch\n\n\nHolds details on the Rade license type and offline mode.\n\n\n\n\n\n\nRes:keywords\n\n\nkeywords\n\n\nA list of keywords associated with the resource (see Appendix A: Keywords and Properties Parsing)\n\n\n\n\n\n\nres:properties\n\n\nkeywords\n\n\nA list of name value pairs associated with the resource (see Appendix A: Keywords and Properties Parsing)\n\n\n\n\n\n\nres:images\n\n\nimages\n\n\nA list of image sizes and color depths held by the StoreFront Services server (may be used to determine which image sizes are likely to give good results when requested by the client).\n\n\n\n\n\n\nRes:launchica\n\n\nlaunch\n\n\nThe url to which to make an ICA launch request (see Launch).\n\n\n\n\n\n\nRes:launchrade\n\n\nlaunch\n\n\nThe url to which to make a Rade (streaming) launch request (see Launch).\n\n\n\n\n\n\nRes:image\n\n\ncore\n\n\nThe url to which to make a request for the best image for the resource (see Images and Icons).\n\n\n\n\n\n\nRes:icon\n\n\nicon\n\n\nThe url to which to request the ico file for the resource (see Images and Icons).\n\n\n\n\n\n\nRes:enabled\n\n\ncore\n\n\ntrue|false \nvalue indicating whether the resource is enabled.\n\n\n\n\n\n\nRes:machinepoweroff\n\n\nvm\n\n\nThe url to which to send a request to trigger a shutdown of the physical/virtual machine supplying a desktop (see Machine Power Off). [XenDesktop desktops only]\n\n\n\n\n\n\nres:mandatory\n\n\nsub\n\n\ntrue|false\n value indicating whether the resource is mandatory. \nResources marked as mandatory are always subscribed and cannot be un-subscribed by the clients. \nClients should treat the resource as non mandatory if this element is missing.\n\n\n\n\n\n\nres:showondesktop\n\n\ncore\n\n\ntrue|false\n value indicating whether the resource is should be shown as a desktop shortcut.\nClients should treat the resource as not to be shown on the desktop if this element is missing\n\n\n\n\n\n\nres:showonstartmenu\n\n\ncore\n\n\ntrue|false\n value indicating whether the resource is should be shown as an entry on the start menu.\nClients should treat the resource as not to be shown on the start menu if this element is missing\n\n\n\n\n\n\nres:startmenuroot\n\n\ncore\n\n\nIf the associated resource is to be shown on the start menu, this string value indicates the root location within the start menu structure.\nClients should treat the value as an empty string if this element is missing\n\n\n\n\n\n\nres:startmenupath\n\n\ncore\n\n\nIf the associated resource is to be shown on the start menu, this string value indicates the sub-location beneath any specified start menu root location within the menu structure.\nClients should treat the value as an empty string if this element is missing\n\n\n\n\n\n\nsub:subscriptionactions\n\n\nsub\n\n\nThe url to which to send subscribe, unsubscribe or subscription- update requests for the current user and resource (see Subscriptions Service).\nIf this element is missing, clients are not able to change the resource subscription state, although the resource may still have subscriptionstatus and other subscription elements.\n\n\n\n\n\n\nsub:subscriptionstatus\n\n\nsub, status\n\n\nThe subscription status.\n\n\n\n\n\n\nsub:subscriptionid\n\n\nsub\n\n\nThe subscription id.\n\n\n\n\n\n\nsub:subscriptiondata\n\n\nkeywords\n\n\nThe subscription properties.\n\n\n\n\n\n\nres:featured\n\n\ncore\n\n\ntrue|false \n value. true if \nfeatured\n or \nrecommended\n keywords are found (case-insensitive) otherwise false.\n\n\n\n\n\n\nres:workflowenabled\n\n\ncore\n\n\ntrue|false\n value. true if workflow is enabled for the resource.\n\n\n\n\n\n\nres:workflowwithoutclientinteraction\n\n\ncore\n\n\ntrue|false\n value. Set to true if workflow is enabled but does not require client interaction for the resource (typically due to the presence of the \nWFI\n keyword, but this may change in future). This value is only true if the server can determine with certainty that there will be no interaction. Due to the distributed nature of workflow integration, there may be situations where the server is unable to determine this value with certainty and so will return false.\n\n\n\n\n\n\nres:imagehash\n\n\ncore\n\n\nA string giving a hash of the resources full image data. If two resources have the same image hash value, then (barring the insignificant chance of a hash collision) they have the same image data.\nFor most purposes clients can use the res:image URL value to determine whether resources share image data.\n\n\n\n\n\n\nsub:subscriptionquestionurl\n\n\nworkflow\n\n\nThe URL that the Receiver client should launch to allow the user to specify a reason for the subscription (the value of the SubscriptionQuestionURL subscription property).\n\n\n\n\n\n\nsub:subscriptionreasontext\n\n\nworkflow\n\n\nThe user's provided reason for subscribing (the value of the SubscriptionReasonText subscription property).\n\n\n\n\n\n\nsub:subscriptionresponsereason\n\n\nworkflow, status\n\n\nThe reason supplied by the approval system for allowing or rejecting a subscription, typically a value entered by a manager (the value of the SubscriptionResponseReason subscription property).\n\n\n\n\n\n\nres:accessonetimeticket\n\n\nlaunch\n\n\nThe URL to which a client can make a one-time request for a URL that can be used for a browser launch (also known as \u2018pre-launch\u2019 or \u2018sso\u2019 service).\nThe details of the access one-time service found at this URL are outside the scope of this document.\n\n\n\n\n\n\nres:followmedataaccess\n\n\nfmd\n\n\nThe URL to hold the location of the follow-me data (FMD) service for a resource.\nThe details of the service found at this URL are outside the scope of this document.\n\n\n\n\n\n\nres:aggregatedresource\n\n\ncore\n\n\ntrue|false\nvalue. true if the resource is aggregated.\n\n\n\n\n\n\nres:publisherresourceid\n\n\ncore\n\n\nThe publisher resource id. This id allows the publisher to uniquely identity a resource.\n\n\n\n\n\n\nres:publishername\n\n\ncore\n\n\nThe name of the publisher (the farm name for XA).\n\n\n\n\n\n\n\n\nNote\n: The image and icon urls represent the image data at the point that the enumeration was performed. If, subsequently, the image data changes for the resource, these urls will not point to the updated images. On the other hand the urls are persistent in the sense that they will always point to the same image (or icon file), although they may return 404 after the image data has been updated on the XenApp/XenDesktop server.\n\n\nThe root \nresources \n element shall also have the following attributes:\n\n\n\n\n\n\n\n\nAttribute (namespace)\n\n\nValue\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nenumeration (http://citrix.com/delivery- services/2-0 resources)\n\n\nfull\n\n\nAll the aggregated Xml Services responded\n\n\n\n\n\n\npartial\n\n\nSome of the aggregated Xml Services responded\n\n\n\n\n\n\n\n\nfailed\n\n\nNone of the aggregated Xml Services responded\n\n\n\n\n\n\n\n\nsubscriptionsstatus (http://citrix.com/delivery- services/2-0/subscriptions)\n\n\nenabled\n\n\nSubscriptions enabled\n\n\n\n\n\n\ndisabled\n\n\nSubscriptions disabled\n\n\n\n\n\n\n\n\nunavailable\n\n\nSubscriptions enabled, but database currently unavailable.\n\n\n\n\n\n\n\n\n\n\nEndpoints\n\n\n\n\n\n\n\n\nURL (indicative only)\n\n\nId\n\n\nCapabilities\n\n\n\n\n\n\n\n\n\n\n/resources/v2/withoutautoprovision\n\n\nListResources\n\n\nResourcesEnumerationV2 + 'group:\n' for each supported group name.\n\n\n\n\n\n\n/resources/v2\n\n\nListResourcesWithAutoProvision\n\n\nResourcesEnumerationV2 AutoProvision + 'group:\n' for each supported group name.\n\n\n\n\n\n\n\n\nAuto Provisioning\n\n\nThis service offers optional auto-provisioning behaviour. With auto-provisioning, the enumeration service automatically subscribes an application if all of the following conditions are true:\n\n\n\n\nThe application is an Auto-provisioned application.\n\n\nThe application has never been subscribed.\n\n\nThe application has no associated workflow for subscription.\n\n\n\n\nMandatory Apps\n\n\nAll the apps which are marked as mandatory have the following subscriptions behaviour.\n\n\n\n\nThey are always subscribed for all users.\n\n\nThey cannot be unsubscribed by the Clients. \n\n\n\n\nExample: Request all resources\n\n\nRequest\n\n\nGET http://www.example.com/Citrix/Store/resources/v2?group=core\ngroup=sub HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.resources+xml\nAccept-Encoding: gzip, deflate,gzip, deflate\nAuthorization: CitrixAuth H4sIAA........\nHost: www.example.com\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.resources+xml\nContent-Length: xxxxxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nresources\n \nxmlns=\nhttp://citrix.com/delivery-services/2-0/resources\n\n\nxmlns:a=\nhttp://citrix.com/delivery-services/2-0/subscriptions\n\n           \nenumeration=\nfull\n \na:subscriptionsstatus=\nenabled\n\n  \nresource\n\n    \nid\nController.Notepad\n/id\n\n    \nlink\n\n\nurl\nhttps://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu\n/url\n \n/link\n\n\ntitle\nNotepad\n/title\n\n\nsummary\nNotepad\n/summary\n\n\npath\n\\\n/path\n \nresourcetype\nCitrix.MPS.Application\n/resourcetype\n \nclienttypes\n\n      \nclienttype\nica30\n/clienttype\n\n      \nclienttype\nrdp\n/clienttype\n\n    \n/clienttypes\n\n    \nrade\n\n      \nlicenseType\nonline\n/licenseType\n\n      \nofflineMode\nnone\n/offlineMode\n\n    \n/rade\n\n    \nimages\n\n      \nimage\n \nsize=\n48\n \ndepth=\n4\n  \n/\n\n      \nimage\n \nsize=\n32\n \ndepth=\n4\n  \n/\n\n      \nimage\n \nsize=\n24\n \ndepth=\n4\n  \n/\n\n      \nimage\n \nsize=\n16\n \ndepth=\n4\n  \n/\n\n      \nimage\n \nsize=\n48\n \ndepth=\n8\n  \n/\n\n      \nimage\n \nsize=\n32\n \ndepth=\n8\n  \n/\n\n      \nimage\n \nsize=\n24\n \ndepth=\n8\n  \n/\n\n      \nimage\n \nsize=\n16\n \ndepth=\n8\n  \n/\n\n      \nimage\n \nsize=\n256\n \ndepth=\n32\n  \n/\n\n      \nimage\n \nsize=\n48\n \ndepth=\n32\n  \n/\n\n      \nimage\n \nsize=\n32\n \ndepth=\n32\n  \n/\n\n      \nimage\n \nsize=\n24\n \ndepth=\n32\n  \n/\n\n      \nimage\n \nsize=\n16\n \ndepth=\n32\n  \n/\n\n    \n/images\n\n    \nenabled\ntrue\n/enabled\n\n    \nlaunchica\n\n\nurl\nhttps://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu/launch/ica\n/url\n \n/launchica\n\n\nimage\n\n\nurl\nhttps://www.example.com/Citrix/Store/resources/v2/E4wNXorb0I5OHEvZlhsOWFZPQ--/image\n/url\n \n/image\n\n\nicon\n \nurl\nhttps://www.example.com/Citrix/Store/resources/v2/E4wNXorb0I5OHEvZlhsOWFZPQ--/icon\n/url\n\n\n/icon\n \nimagehash\nE4wNXorb0I5OHEvZlhsOWFZPQ--\n/imagehash\n \naggregatedresource\nfalse\n/aggregatedresource\n \npublisherresourceid\nNotepad\npublisherresourceid\n \npublishername\nFarm1\n/publishername\n \nmandatory\ntrue\n/mandatory\n \na:subscriptionactions\n\n\nurl\nhttps://www.example.com/Citrix/Store/resources/v2/subscriptions/Q2l0cml4Lk1QUy5BcHAu\n/url\n \n/a:subscriptionactions\n\n\n/resource\n\n  ...\n\n/resources\n\n\n\n\n\n\nExample: Request a specific resource\n\n\nNotes\n: When a request is made for a specific resource, then the same Xml is returned as for the corresponding resource element in the resources enumeration using the same schema, as illustrated by the following example:\n\n\nRequest\n\n\nGET https://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu HTTP/1.1 Accept: application/vnd.citrix.resource+xml\nAuthorization: CitrixAuth H4sIAA........\nHost: www.example.com\nConnection: Keep-Alive\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.resource+xml\nContent-Length: xxxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nresource\n\n  \nid\nController.Notepad\n/id\n\n  \nlink\n\n\nurl\nhttps://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu\n/url\n \n/link\n\n\ntitle\nNotepad\n/title\n\n\nsummary\nNotepad\n/summary\n\n\npath\n\\\n/path\n \nresourcetype\nCitrix.MPS.Application\n/resourcetype\n \nclienttypes\n\n    \nclienttype\nica30\n/clienttype\n\n    \nclienttype\nrdp\n/clienttype\n\n  \n/clienttypes\n\n  \nrade\n\n    \nlicenseType\nonline\n/licenseType\n\n    \nofflineMode\nnone\n/offlineMode\n\n  \n/rade\n\n  \nimages\n\n    \nimage\n \nsize=\n48\n \ndepth=\n4\n  \n/\n\n     ...\n    \nimage\n \nsize=\n16\n \ndepth=\n32\n  \n/\n\n\n/images\n\n  \nenabled\ntrue\n/enabled\n\n  \nlaunchica\n\n\nurl\nhttps://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu/launch/ica\n/url\n \n/launchica\n\n\nimage\n\n\nurl\nhttps://www.example.com/Citrix/Store/resources/v2/E4wNXorb0I5OHEvZlhsOWFZPQ--/image\n/url\n \n/image\n\n\nicon\n\n\nurl\nhttps://www.example.com/Citrix/Store/resources/v2/E4wNXorb0I5OHEvZlhsOWFZPQ--/icon\n/url\n \n/icon\n\n\nimagehash\nE4wNXorb0I5OHEvZlhsOWFZPQ--\n/imagehash\n \nmandatory\ntrue\n/mandatory\n \na:subscriptionactions\n\n\nurl\nhttps://www.example.com/Citrix/Store/resources/v2/subscriptions/Q2l0cml4Lk1QUy5BcHAu\n/url\n \n/a:subscriptionactions\n\n\n/resource", 
            "title": "Resource Enumeration"
        }, 
        {
            "location": "/resource-enumeration/#resource-enumeration", 
            "text": "", 
            "title": "Resource Enumeration"
        }, 
        {
            "location": "/resource-enumeration/#request", 
            "text": "URL  (indicative only)  Method  Description      /resources/v2/ /resources/v2/withoutautoprovision (see Endpoints section)  GET  Returns a list of all resources available for the user in resources Xml format, with or without auto-provision.    /resources/v2/{id}  GET  Returns the details of specified resource in resource Xml format. This URL is given for illustrative purposes. The actual URL should be obtained from the enumeration result returned by the request to /resources/v2/.        URL parameter  Description      {id}  The identifier of the resource. This is unique to the instance of the service.        Query string parameter  Description      group  Allows the requester to specify which resource elements should be returned by the enumeration. Rather than specify the elements individually, \u2018groups\u2019 are defined which give a group name associated with a collection of elements names (the mechanism by which groups are defined is not described here).   The default value (if no group is specified) is \u2018 all \u2019. The \u2018 all \u2019 group corresponds to requesting all available elements.    Group names are matched regardless of case. Unrecognized group names are ignored. If multiple groups are specified then the union of the elements for each group is used. Multiple groups can be requested using multiple group parameters e.g. to request all elements in either the  core  or  sub  groups: .../resources/v2/?group=core group=sub.    The id element is always returned. If one or more groups are specified, but none of the group names are recognized, then resources containing just the id element will be returned.   See below for the default groups defined. This set of groups may be increased by Citrix or 3rd- party extensions in the future (the mechanisms for this extension are not discussed here). Note, however, that groups extensions will not be allowed to change the elements associated with a group.    subscriptionStatus  Allows the requester to specify that only resources with a specified set of status values should be returned. Multiple status values can be requested using multiple subscriptionStatus parameters. If no subscriptionStatus is supplied, resources are returned regardless of subscription status.   The valid values are those defined in the subscription schema for the subscriptionStatus element (see /Schemas/Subscriptions.xsd).    scope  Allows the scope to be specified (a concept in the Nfuse protocol).   Only a limited set of allowed values will be permitted. Other values will result in a HTTP 400 (Bad Request) response. The value check will be case-insensitive, although the value passed on to the underlying system will be of the defined case.   Allowed values:  $PRELAUNCH$   and   $ANONYMOUS_PRELAUNCH$   - As defined by the pre-launch optimizations for PNAgent.  The scope value will be passed in the Nfuse RequestAppData made to XenApp/XenDesktop.    clientName, clientAddress  See Client Name, Client Address and Device Id section above.     Notes :   These requests require an Authorisation token  The URL for a request for a specific resource (i.e. /resources/v2/{id}) is obtained from the Response to resource enumeration (i.e. /resources/v2/).  In all cases, for each request, the service will perform a fresh enumeration for the user and so will pick up any changes.  Group and subscriptionStatus query string parameters can be applied in any combination (both, either, neither) and order.", 
            "title": "Request"
        }, 
        {
            "location": "/resource-enumeration/#response", 
            "text": "Response Code  Description      200  Success    401  Bad/Missing security token (see CitrixAuth Authentication Scheme document [3] )    404  No resource available for the specified {id} parameter (the resource may not exist or access to it may not be authorized for the requesting user).        Response Format  Request Accept /Response Content-Type Header      Resources Xml format  application/vnd.citrix.resources+xml    Resource Xml format  application/vnd.citrix.resource+xml     The resources Xml format allows for extensions. The default Store service with no 3rd-party extensions will have the following elements which shall exist in the [http://citrix.com/delivery-services/2-0/resources] (\u2018res:\u2019) and [http://citrix.com/delivery-services/2-0/subscriptions] (\u2018sub:\u2019) namespaces.     Extension element  Group(s)  Description      res:id  n/a  An identifier that is unique across this instance of the resources service. This value is always returned in resources regardless of specified groups.    Res:title  core  The user friendly name of the resource.    Res:link  core, status  The url to request the resource\u2019s details.    Res:summary  core  A longer text description of the resource.    Res:path  core  The path defined in the XenApp/XenDesktop Farm for the resource    res:resourcetype  core  A string identifying the type of the resource. If no extensions are installed, this will be one of the values  \u2018Citrix.MPS.Application\u2019 ,  \u2018Citrix.MPS.Desktop\u2019  or  \u2018Citrix.MPS.Document\u2019 .    res:playsfiletypes  fta  A list of file extensions supported by the resource [Application only]    res:contentlocation  launch  The location (UNC or URL) of the content of a document resource. [Document only]    res:clienttypes  core  A value identifying the clients supported for launches. Known values include:   \u2018ica30\u2019 ,  \u2018rade\u2019 ,  \u2018rdp\u2019  (XenApp/XenDesktop),  \u2018application/ios\u2019 ,  \u2018application/android\u2019 (AppController),  \u2018g2m\u2019 ,  \u2018g2t\u2019 , etc (Citrix Online Integration using Generic applications).  Future releases of the Store Service or using future versions of XenApp, XenDesktop or AppController may return additional values.    Res:rade  launch  Holds details on the Rade license type and offline mode.    Res:keywords  keywords  A list of keywords associated with the resource (see Appendix A: Keywords and Properties Parsing)    res:properties  keywords  A list of name value pairs associated with the resource (see Appendix A: Keywords and Properties Parsing)    res:images  images  A list of image sizes and color depths held by the StoreFront Services server (may be used to determine which image sizes are likely to give good results when requested by the client).    Res:launchica  launch  The url to which to make an ICA launch request (see Launch).    Res:launchrade  launch  The url to which to make a Rade (streaming) launch request (see Launch).    Res:image  core  The url to which to make a request for the best image for the resource (see Images and Icons).    Res:icon  icon  The url to which to request the ico file for the resource (see Images and Icons).    Res:enabled  core  true|false  value indicating whether the resource is enabled.    Res:machinepoweroff  vm  The url to which to send a request to trigger a shutdown of the physical/virtual machine supplying a desktop (see Machine Power Off). [XenDesktop desktops only]    res:mandatory  sub  true|false  value indicating whether the resource is mandatory.  Resources marked as mandatory are always subscribed and cannot be un-subscribed by the clients.  Clients should treat the resource as non mandatory if this element is missing.    res:showondesktop  core  true|false  value indicating whether the resource is should be shown as a desktop shortcut. Clients should treat the resource as not to be shown on the desktop if this element is missing    res:showonstartmenu  core  true|false  value indicating whether the resource is should be shown as an entry on the start menu. Clients should treat the resource as not to be shown on the start menu if this element is missing    res:startmenuroot  core  If the associated resource is to be shown on the start menu, this string value indicates the root location within the start menu structure. Clients should treat the value as an empty string if this element is missing    res:startmenupath  core  If the associated resource is to be shown on the start menu, this string value indicates the sub-location beneath any specified start menu root location within the menu structure. Clients should treat the value as an empty string if this element is missing    sub:subscriptionactions  sub  The url to which to send subscribe, unsubscribe or subscription- update requests for the current user and resource (see Subscriptions Service). If this element is missing, clients are not able to change the resource subscription state, although the resource may still have subscriptionstatus and other subscription elements.    sub:subscriptionstatus  sub, status  The subscription status.    sub:subscriptionid  sub  The subscription id.    sub:subscriptiondata  keywords  The subscription properties.    res:featured  core  true|false   value. true if  featured  or  recommended  keywords are found (case-insensitive) otherwise false.    res:workflowenabled  core  true|false  value. true if workflow is enabled for the resource.    res:workflowwithoutclientinteraction  core  true|false  value. Set to true if workflow is enabled but does not require client interaction for the resource (typically due to the presence of the  WFI  keyword, but this may change in future). This value is only true if the server can determine with certainty that there will be no interaction. Due to the distributed nature of workflow integration, there may be situations where the server is unable to determine this value with certainty and so will return false.    res:imagehash  core  A string giving a hash of the resources full image data. If two resources have the same image hash value, then (barring the insignificant chance of a hash collision) they have the same image data. For most purposes clients can use the res:image URL value to determine whether resources share image data.    sub:subscriptionquestionurl  workflow  The URL that the Receiver client should launch to allow the user to specify a reason for the subscription (the value of the SubscriptionQuestionURL subscription property).    sub:subscriptionreasontext  workflow  The user's provided reason for subscribing (the value of the SubscriptionReasonText subscription property).    sub:subscriptionresponsereason  workflow, status  The reason supplied by the approval system for allowing or rejecting a subscription, typically a value entered by a manager (the value of the SubscriptionResponseReason subscription property).    res:accessonetimeticket  launch  The URL to which a client can make a one-time request for a URL that can be used for a browser launch (also known as \u2018pre-launch\u2019 or \u2018sso\u2019 service). The details of the access one-time service found at this URL are outside the scope of this document.    res:followmedataaccess  fmd  The URL to hold the location of the follow-me data (FMD) service for a resource. The details of the service found at this URL are outside the scope of this document.    res:aggregatedresource  core  true|false value. true if the resource is aggregated.    res:publisherresourceid  core  The publisher resource id. This id allows the publisher to uniquely identity a resource.    res:publishername  core  The name of the publisher (the farm name for XA).     Note : The image and icon urls represent the image data at the point that the enumeration was performed. If, subsequently, the image data changes for the resource, these urls will not point to the updated images. On the other hand the urls are persistent in the sense that they will always point to the same image (or icon file), although they may return 404 after the image data has been updated on the XenApp/XenDesktop server.  The root  resources   element shall also have the following attributes:     Attribute (namespace)  Value  Description      enumeration (http://citrix.com/delivery- services/2-0 resources)  full  All the aggregated Xml Services responded    partial  Some of the aggregated Xml Services responded     failed  None of the aggregated Xml Services responded     subscriptionsstatus (http://citrix.com/delivery- services/2-0/subscriptions)  enabled  Subscriptions enabled    disabled  Subscriptions disabled     unavailable  Subscriptions enabled, but database currently unavailable.", 
            "title": "Response"
        }, 
        {
            "location": "/resource-enumeration/#endpoints", 
            "text": "URL (indicative only)  Id  Capabilities      /resources/v2/withoutautoprovision  ListResources  ResourcesEnumerationV2 + 'group: ' for each supported group name.    /resources/v2  ListResourcesWithAutoProvision  ResourcesEnumerationV2 AutoProvision + 'group: ' for each supported group name.", 
            "title": "Endpoints"
        }, 
        {
            "location": "/resource-enumeration/#auto-provisioning", 
            "text": "This service offers optional auto-provisioning behaviour. With auto-provisioning, the enumeration service automatically subscribes an application if all of the following conditions are true:   The application is an Auto-provisioned application.  The application has never been subscribed.  The application has no associated workflow for subscription.", 
            "title": "Auto Provisioning"
        }, 
        {
            "location": "/resource-enumeration/#mandatory-apps", 
            "text": "All the apps which are marked as mandatory have the following subscriptions behaviour.   They are always subscribed for all users.  They cannot be unsubscribed by the Clients.", 
            "title": "Mandatory Apps"
        }, 
        {
            "location": "/resource-enumeration/#example-request-all-resources", 
            "text": "", 
            "title": "Example: Request all resources"
        }, 
        {
            "location": "/resource-enumeration/#request_1", 
            "text": "GET http://www.example.com/Citrix/Store/resources/v2?group=core group=sub HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.resources+xml\nAccept-Encoding: gzip, deflate,gzip, deflate\nAuthorization: CitrixAuth H4sIAA........\nHost: www.example.com", 
            "title": "Request"
        }, 
        {
            "location": "/resource-enumeration/#response_1", 
            "text": "HTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.resources+xml\nContent-Length: xxxxxxx  ?xml version= 1.0  encoding= utf-8 ?  resources   xmlns= http://citrix.com/delivery-services/2-0/resources  xmlns:a= http://citrix.com/delivery-services/2-0/subscriptions \n            enumeration= full   a:subscriptionsstatus= enabled \n   resource \n     id Controller.Notepad /id \n     link  url https://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu /url   /link  title Notepad /title  summary Notepad /summary  path \\ /path   resourcetype Citrix.MPS.Application /resourcetype   clienttypes \n       clienttype ica30 /clienttype \n       clienttype rdp /clienttype \n     /clienttypes \n     rade \n       licenseType online /licenseType \n       offlineMode none /offlineMode \n     /rade \n     images \n       image   size= 48   depth= 4    / \n       image   size= 32   depth= 4    / \n       image   size= 24   depth= 4    / \n       image   size= 16   depth= 4    / \n       image   size= 48   depth= 8    / \n       image   size= 32   depth= 8    / \n       image   size= 24   depth= 8    / \n       image   size= 16   depth= 8    / \n       image   size= 256   depth= 32    / \n       image   size= 48   depth= 32    / \n       image   size= 32   depth= 32    / \n       image   size= 24   depth= 32    / \n       image   size= 16   depth= 32    / \n     /images \n     enabled true /enabled \n     launchica  url https://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu/launch/ica /url   /launchica  image  url https://www.example.com/Citrix/Store/resources/v2/E4wNXorb0I5OHEvZlhsOWFZPQ--/image /url   /image  icon   url https://www.example.com/Citrix/Store/resources/v2/E4wNXorb0I5OHEvZlhsOWFZPQ--/icon /url  /icon   imagehash E4wNXorb0I5OHEvZlhsOWFZPQ-- /imagehash   aggregatedresource false /aggregatedresource   publisherresourceid Notepad publisherresourceid   publishername Farm1 /publishername   mandatory true /mandatory   a:subscriptionactions  url https://www.example.com/Citrix/Store/resources/v2/subscriptions/Q2l0cml4Lk1QUy5BcHAu /url   /a:subscriptionactions  /resource \n  ... /resources", 
            "title": "Response"
        }, 
        {
            "location": "/resource-enumeration/#example-request-a-specific-resource", 
            "text": "Notes : When a request is made for a specific resource, then the same Xml is returned as for the corresponding resource element in the resources enumeration using the same schema, as illustrated by the following example:", 
            "title": "Example: Request a specific resource"
        }, 
        {
            "location": "/resource-enumeration/#request_2", 
            "text": "GET https://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu HTTP/1.1 Accept: application/vnd.citrix.resource+xml\nAuthorization: CitrixAuth H4sIAA........\nHost: www.example.com\nConnection: Keep-Alive", 
            "title": "Request"
        }, 
        {
            "location": "/resource-enumeration/#response_2", 
            "text": "HTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.resource+xml\nContent-Length: xxxxx  ?xml version= 1.0  encoding= utf-8 ?  resource \n   id Controller.Notepad /id \n   link  url https://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu /url   /link  title Notepad /title  summary Notepad /summary  path \\ /path   resourcetype Citrix.MPS.Application /resourcetype   clienttypes \n     clienttype ica30 /clienttype \n     clienttype rdp /clienttype \n   /clienttypes \n   rade \n     licenseType online /licenseType \n     offlineMode none /offlineMode \n   /rade \n   images \n     image   size= 48   depth= 4    / \n     ...\n     image   size= 16   depth= 32    /  /images \n   enabled true /enabled \n   launchica  url https://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu/launch/ica /url   /launchica  image  url https://www.example.com/Citrix/Store/resources/v2/E4wNXorb0I5OHEvZlhsOWFZPQ--/image /url   /image  icon  url https://www.example.com/Citrix/Store/resources/v2/E4wNXorb0I5OHEvZlhsOWFZPQ--/icon /url   /icon  imagehash E4wNXorb0I5OHEvZlhsOWFZPQ-- /imagehash   mandatory true /mandatory   a:subscriptionactions  url https://www.example.com/Citrix/Store/resources/v2/subscriptions/Q2l0cml4Lk1QUy5BcHAu /url   /a:subscriptionactions  /resource", 
            "title": "Response"
        }, 
        {
            "location": "/launch/", 
            "text": "Launch\n\n\nRequest\n\n\n\n\n\n\n\n\nURL (indicative only)\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n/resources/v2/{id}/launch/ica\n\n\nPOST\n\n\nAttempt to launch the specified resource using the ICA protocol\n\n\n\n\n\n\n/resources/v2/{id}/launch/rade\n\n\nPOST\n\n\nAttempt to launch the specified resource using the Rade protocol\n\n\n\n\n\n\n/resources/v2/{id}/launch/{protocol}/{retrykey}\n\n\nPOST\n\n\nRetry the attempt to launch the specified resource using the specified protocol\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n{id}\n\n\nThe identifier of the associated resource. This is unique to the instance of the service.\n\n\n\n\n\n\n{protocol}\n\n\nThe protocol to be used to launch the resource ('ica' or 'rade')\n\n\n\n\n\n\n{retrykey}\n\n\nThe retry key used to identify a launch request that is not ready (see below)\n\n\n\n\n\n\n\n\nNotes\n:\n\n\n\n\nThese requests require an Authorisation token.\n\n\nThe URLs given above are for illustrative purposes, the actual URLs used by a client should be taken from the result of a previous request (e.g. /resources/v2/ or /resources/v2/{id} for all launch urls apart from the retry url which should be returned in a launch retry response).\n\n\nThe launch requests require the specification of launch parameters, included as Xml in the POST body, described below.\n\n\nIf subscriptions are enabled, then unsubscribed resources are prevented from launching.\n\n\n\n\nLaunch Parameters\n\n\nThe following information is required by the launch process, which is sent as POSTed Xml, described by the schema: /Schemas/LaunchParams.xsd\n\n\n\n\n\n\n\n\nParameter\n\n\nRequired\n\n\nLaunch Type\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nclientName\n\n\nOptional\n\n\nAll protocols\n\n\nA string identifying the client (any characters except null (0) or newline characters. It is the client's responsibility to use a value that will behave appropriately (see notes below)\n\n\n\n\n\n\nclientAddress\n\n\nOptional\n\n\nAll protocols\n\n\nThe IPv4 or IPv6 address of the client, as claimed by the client\n\n\n\n\n\n\ndeviceId\n\n\nOptional\n\n\nAll protocols\n\n\nA string identifying the client device\n\n\n\n\n\n\naudio\n\n\nOptional\n\n\nica and rade\n\n\nThe audio settings for the session, one of the following:\n[high|medium|low|off]\n\n\n\n\n\n\ncolourDepth\n\n\nOptional\n\n\nica and rade\n\n\nThe colour depth for the session, one of the following: \n[16 | 256 | high | truecolor ]\n\n\n\n\n\n\ndisplay\n\n\nOptional\n\n\nica and rade\n\n\nThe display type for the session, one of the following: \n[seamless | percent | absolute | fullscreen]\n\n\n\n\n\n\ndisplayPercent\n\n\nOptional\n\n\nica and rade\n\n\nOnly if display=percent\nThe percentage of the screen to be used for the session \n[ 0 \n percent \u2264 100]\n\n\n\n\n\n\ndisplayAbsolute\n\n\nOptional\n\n\nica and rade\n\n\nOnly if display=absolute\nThe x and y extents of the window to be used for the session\n[ 0 \n x,y]\n\n\n\n\n\n\ntransparentKeyPassthrough\n\n\nOptional\n\n\nica and rade\n\n\nSet the behavior of the windows keys etc., one of the following: \n[local | remote | fullscreenonly ]\n\n\n\n\n\n\nspecialFolderRedirection\n\n\nOptional\n\n\nica and rade\n\n\nAre the special folders directed, one of the following: \n[true | false ]\n\n\n\n\n\n\nclearTypeRemoting\n\n\nOptional\n\n\nica and rade\n\n\nAre ClearType fonts remoted, one of the following: \n[true | false ]\n\n\n\n\n\n\nshowDesktopViewer\n\n\nOptional\n\n\nica\n\n\nShould the desktop viewer be used as the ICA client. \n[true | false ]\n\n\n\n\n\n\nlauncher\n\n\nOptional\n\n\nica\n\n\nIdentifier for the launcher program.\nAny string is allowed, not including null (0) or newline characters.\n\n\n\n\n\n\nvirtualComPort\n\n\nOptional\n\n\nica\n\n\nIf specified, determines the value of the VirtualCOMPortEmulation setting in the WFClient section.\n[true | false ]\n\n\n\n\n\n\ncomPortMapping\n\n\nOptional\n\n\nica\n\n\nIf specified, determines the value of the COMAllowed setting in the WFClient section.\n[true | false ]\n\n\n\n\n\n\nclientPrinter\n\n\nOptional\n\n\nica\n\n\nIf specified, determines the values of the CPMAllowed and VSLAllowed settings in the WFClient section.\n[true | false ]\n\n\n\n\n\n\n\n\nNotes\n:\n\n\n\n\nThe presence of the launch parameters shall be signaled by setting the Content-Type of the POST to be: application/vnd.citrix.launchparams+xml\n\n\nThe use of clientAddress is required to take advantage of the Zone Preference feature of XenApp.\n\n\nFor the Workspace control feature, either clientName or deviceId is required.\n\n\nThe clientName either identifies the client machine or the end-user, depending on the semantics required by the client and is usually one of the following:\n\n\nThe client hostname\n\n\nA random string\n\n\nA digest of username+domain (assumed by older versions of the XenApp Xml Service and XenApp for Unix versions)\n\n\n\n\n\n\n\n\nNote\n: If the resources are being accessed through Access Gateway, then the clientName is specified by the gateway.\n\n\nResponse\n\n\n\n\n\n\n\n\nResponse Code\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200\n\n\nSuccess/Retry required/failure\n\n\n\n\n\n\n401\n\n\nBad/Missing security token \n(see CitrixAuth Authentication Scheme document [3])\n\n\n\n\n\n\n404\n\n\nResource identified by {id} was not available for launch. The reason is indicated by the X-Citrix-Error-Reason header value in the HTTP response: \nResourceNotFound: No resource was found for the requesting user for the specified id.\nResourceDisabled\n: The resource was found but was not enabled.\nUnsupportedOperation\n: ICA launch was not supported for this resource.\nSubscriptionStatusInvalid\n: Workflow was enabled for the resource but was not in the subscribed state.\nSubscriptionStatusUnknown\n: Workflow was enabled for the resource, but the system was unable to determine the subscription state.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse Format\n\n\nRequest Accept /Response Content-Type Header\n\n\n\n\n\n\n\n\n\n\nXml\n\n\napplication/vnd.citrix.launchdata+xml\n\n\n\n\n\n\n\n\nThe response returns data regarding the launch request that can be categorised as: Success, Retry required, or Failure. A retry is required, for example, when a desktop has to be started before a connection can be made to it. The data returned in the response is Xml described by the schema: /Schemas/LaunchData.xsd.\n\n\nICA Launch Result\n\n\nSuccessful ICA launch results contain the following data: \n\n\nica : The ICA file content.\n\n\nlogonTicket : Specifies any logon ticket that might have been generated for the current launch. This value could be parsed from the ICA file content, but is supplied as a convenience for clients. Clients are expected to use this as a security measure to allow any outstanding logon tckets to be cleaned up if the client is closed while launches are outstanding with logon tickets that might not have been redeemed.\n\n\nFailed Launch Error Codes\n\n\nIf the response represents a failed launch (launch type \u2018error\u2019), then the contained error id will be one of the following values:\n\n\n\n\n\n\n\n\nLaunch error Id\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nAppRemoved\n\n\nThe resource to launch no longer exists, is no longer enabled or is no longer visible to the current user.\n\n\n\n\n\n\nNoMoreActiveSessions\n\n\nThe user is not allowed any more active sessions. Currently applies to XenDesktop only.\n\n\n\n\n\n\nNotLicensed\n\n\nThe server does not have the required license to perform the requested activity.\n\n\n\n\n\n\nUnavailableDesktop\n\n\nNo workstations are available to service this request. Currently applies to XenDesktop only.\n\n\n\n\n\n\nCouldNotConnectToWorkstation\n\n\nThe server refused a connection. Currently applies to XenDesktop only.\n\n\n\n\n\n\nWorkstationInMaintenance\n\n\nThe requested workstation is in maintenance mode and cannot be used. Currently applies to XenDesktop only.\n\n\n\n\n\n\nResourceError \n GeneralAppLaunchError\n\n\nGeneral error that cannot be further specified.\n\n\n\n\n\n\n\n\nRetry Reason Codes\n\n\nIf the response represents a delayed launch (launch type \u2018\u2019retry\u201d), then the contained retryReason will be one of the following values:\n\n\n\n\n\n\n\n\nLaunch retry reason\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrebooting\n\n\nThe requested workstation is rebooting.\n\n\n\n\n\n\nresuming\n\n\nThe requested workstation is resuming.\n\n\n\n\n\n\nunknown\n\n\nRetry reason not covered by the other values.\n\n\n\n\n\n\n\n\nRemedy Hint Codes\n\n\nIf the response represents a delayed or failed launch, then the response may contain a remedyHint value with one of the following values:\n\n\n\n\n\n\n\n\nremdyHint values\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrestart-desktop\n\n\nThe problem may be resolved by restarting the desktop.\n\n\n\n\n\n\n\n\nLaunch Examples\n\n\nExample: Successful Ica launch\n\n\nRequest\n\n\nPOST https://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu/launch/ica HTTP/1.1 Accept: application/vnd.citrix.launchdata+xml\nAuthorization: CitrixAuth H4sIAAAAAAAEAO29B2AcS/T+x8z9Ajw4AAA==\nContent-Type: application/vnd.citrix.launchparams+xml\nContent-Length: xxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-16\n?\n\n\nlaunchparams\n \nxmlns:xsi=\nhttp://www.w3.org/2001/XMLSchema-instance\n\n              \nxmlns:xsd=\nhttp://www.w3.org/2001/XMLSchema\n\n\nxmlns=\nhttp://citrix.com/delivery-services/1-0/launchparams\n \ndeviceId\nclientname\n/deviceId\n\n  \nclientName\nclientname\n/clientName\n\n\n/launchparams\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0 Content-Type: application/vnd.citrix.launchdata+xml Content-Length: xxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nlaunch\n \nstatus=\nsuccess\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/launch\n \nresult\n \ntype=\nica\n\n  \nica\n...[ICA File Content]...\n/ica\n\n\nlogonTicket\n+dPeXidrRyAgdyqJzX...\n/logonTicket\n \n/result\n\n\n/launch\n\n\n\n\n\n\nExample: Failed Rade launch\n\n\nRequest\n\n\nPOST https://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu/launch/rade HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.launchdata+xml\nAccept-Language: en-gb\nContent-Type: application/vnd.citrix.launchparams+xml Content-Length: xxx\nAuthorization: CitrixAuth H4sIA....\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nlaunchparams\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/launchparams\n\n\ndeviceId\nclientname\n/deviceId\n \nclientName\nclientname\n/clientName\n \nclientAddress\n127.0.0.1\n/clientAddress\n\n\n/launchparams\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.launchdata+xml Content-Length: xxx\nCache-Control: no-cache\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nlaunch\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/launch\n\n        \nstatus=\nfailure\n\n  \nresult\n \ntype=\nerror\n\n\nerror\n\n\nid\nResourceUnavailable\n/id\n\n\ntext\nThe resource is unavailable\n/text\n\n    \n/error\n\n  \n/result\n\n\n/launch\n\n\n\n\n\n\nExample: ICA launch with retry\n\n\nRequest\n\n\nPOST http://www.example.com/Citrix/Store/resources/v2/Q2l0cm...Q-/launch/ica HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.launchdata+xml\nAccept-Language: en-gb\nContent-Type: application/vnd.citrix.launchparams+xml\nContent-Length: xxx\nAuthorization: CitrixAuth H4sIA....\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nlaunchparams\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/launchparams\n\n\ndeviceId\nclientname\n/deviceId\n \nclientName\nclientname\n/clientName\n \nclientAddress\n127.0.0.1\n/clientAddress\n\n\n/launchparams\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.launchdata+xml Content-Length: xxx\nContent-Language: en-gb\nCache-Control: no-cache\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nlaunch\n \nstatus=\nretry\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/launch\n\n  \nresult\n \ntype=\nretry\n\n    \nretry\n\n\nurl\nhttp://www.example.com/Citrix/Store/resources/v2/Q2l0cm...Q-/launch/ica/bbb56\n/url\n \nafter\n30\n/after\n\n\nreason\nunknown\n/reason\n\n    \n/retry\n\n  \n/result\n\n\n/launch\n\n\n\n\n\n\nNote\n: The URL used in this next request is the one returned in the previous response, which includes the retry key: \u2018bbb567\u2019:\n\n\nRequest\n\n\nPOST http://www.example.com/Citrix/Store/resources/v2/Q2l0cm...Q-/launch/ica/bbb567 HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.launchdata+xml\nAccept-Language: en-gb\nContent-Type: application/vnd.citrix.launchparams+xml Content-Length: xxx\nAuthorization: CitrixAuth H4sIA....\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nlaunchparams\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/launchparams\n\n\ndeviceId\nclientname\n/deviceId\n \nclientName\nclientname\n/clientName\n \nclientAddress\n127.0.0.1\n/clientAddress\n\n\n/launchparams\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0 Content-Type: application/vnd.citrix.launchdata+xml Content-Length: xxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nlaunch\n \nstatus=\nsuccess\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/launch\n\n\nresult\n \ntype=\nica\n\n\nica\n...[ICA File Content]...\n/ica\n \nlogonTicket\n85EB92973D2C3804F93A99AAEC232D\n/logonTicket\n\n \n/result\n\n\n/launch", 
            "title": "Launch"
        }, 
        {
            "location": "/launch/#launch", 
            "text": "", 
            "title": "Launch"
        }, 
        {
            "location": "/launch/#request", 
            "text": "URL (indicative only)  Method  Description      /resources/v2/{id}/launch/ica  POST  Attempt to launch the specified resource using the ICA protocol    /resources/v2/{id}/launch/rade  POST  Attempt to launch the specified resource using the Rade protocol    /resources/v2/{id}/launch/{protocol}/{retrykey}  POST  Retry the attempt to launch the specified resource using the specified protocol        Parameter  Description      {id}  The identifier of the associated resource. This is unique to the instance of the service.    {protocol}  The protocol to be used to launch the resource ('ica' or 'rade')    {retrykey}  The retry key used to identify a launch request that is not ready (see below)     Notes :   These requests require an Authorisation token.  The URLs given above are for illustrative purposes, the actual URLs used by a client should be taken from the result of a previous request (e.g. /resources/v2/ or /resources/v2/{id} for all launch urls apart from the retry url which should be returned in a launch retry response).  The launch requests require the specification of launch parameters, included as Xml in the POST body, described below.  If subscriptions are enabled, then unsubscribed resources are prevented from launching.", 
            "title": "Request"
        }, 
        {
            "location": "/launch/#launch-parameters", 
            "text": "The following information is required by the launch process, which is sent as POSTed Xml, described by the schema: /Schemas/LaunchParams.xsd     Parameter  Required  Launch Type  Description      clientName  Optional  All protocols  A string identifying the client (any characters except null (0) or newline characters. It is the client's responsibility to use a value that will behave appropriately (see notes below)    clientAddress  Optional  All protocols  The IPv4 or IPv6 address of the client, as claimed by the client    deviceId  Optional  All protocols  A string identifying the client device    audio  Optional  ica and rade  The audio settings for the session, one of the following: [high|medium|low|off]    colourDepth  Optional  ica and rade  The colour depth for the session, one of the following:  [16 | 256 | high | truecolor ]    display  Optional  ica and rade  The display type for the session, one of the following:  [seamless | percent | absolute | fullscreen]    displayPercent  Optional  ica and rade  Only if display=percent The percentage of the screen to be used for the session  [ 0   percent \u2264 100]    displayAbsolute  Optional  ica and rade  Only if display=absolute The x and y extents of the window to be used for the session [ 0   x,y]    transparentKeyPassthrough  Optional  ica and rade  Set the behavior of the windows keys etc., one of the following:  [local | remote | fullscreenonly ]    specialFolderRedirection  Optional  ica and rade  Are the special folders directed, one of the following:  [true | false ]    clearTypeRemoting  Optional  ica and rade  Are ClearType fonts remoted, one of the following:  [true | false ]    showDesktopViewer  Optional  ica  Should the desktop viewer be used as the ICA client.  [true | false ]    launcher  Optional  ica  Identifier for the launcher program. Any string is allowed, not including null (0) or newline characters.    virtualComPort  Optional  ica  If specified, determines the value of the VirtualCOMPortEmulation setting in the WFClient section. [true | false ]    comPortMapping  Optional  ica  If specified, determines the value of the COMAllowed setting in the WFClient section. [true | false ]    clientPrinter  Optional  ica  If specified, determines the values of the CPMAllowed and VSLAllowed settings in the WFClient section. [true | false ]     Notes :   The presence of the launch parameters shall be signaled by setting the Content-Type of the POST to be: application/vnd.citrix.launchparams+xml  The use of clientAddress is required to take advantage of the Zone Preference feature of XenApp.  For the Workspace control feature, either clientName or deviceId is required.  The clientName either identifies the client machine or the end-user, depending on the semantics required by the client and is usually one of the following:  The client hostname  A random string  A digest of username+domain (assumed by older versions of the XenApp Xml Service and XenApp for Unix versions)     Note : If the resources are being accessed through Access Gateway, then the clientName is specified by the gateway.", 
            "title": "Launch Parameters"
        }, 
        {
            "location": "/launch/#response", 
            "text": "Response Code  Description      200  Success/Retry required/failure    401  Bad/Missing security token  (see CitrixAuth Authentication Scheme document [3])    404  Resource identified by {id} was not available for launch. The reason is indicated by the X-Citrix-Error-Reason header value in the HTTP response:  ResourceNotFound: No resource was found for the requesting user for the specified id. ResourceDisabled : The resource was found but was not enabled. UnsupportedOperation : ICA launch was not supported for this resource. SubscriptionStatusInvalid : Workflow was enabled for the resource but was not in the subscribed state. SubscriptionStatusUnknown : Workflow was enabled for the resource, but the system was unable to determine the subscription state.        Response Format  Request Accept /Response Content-Type Header      Xml  application/vnd.citrix.launchdata+xml     The response returns data regarding the launch request that can be categorised as: Success, Retry required, or Failure. A retry is required, for example, when a desktop has to be started before a connection can be made to it. The data returned in the response is Xml described by the schema: /Schemas/LaunchData.xsd.", 
            "title": "Response"
        }, 
        {
            "location": "/launch/#ica-launch-result", 
            "text": "Successful ICA launch results contain the following data:   ica : The ICA file content.  logonTicket : Specifies any logon ticket that might have been generated for the current launch. This value could be parsed from the ICA file content, but is supplied as a convenience for clients. Clients are expected to use this as a security measure to allow any outstanding logon tckets to be cleaned up if the client is closed while launches are outstanding with logon tickets that might not have been redeemed.", 
            "title": "ICA Launch Result"
        }, 
        {
            "location": "/launch/#failed-launch-error-codes", 
            "text": "If the response represents a failed launch (launch type \u2018error\u2019), then the contained error id will be one of the following values:     Launch error Id  Description      AppRemoved  The resource to launch no longer exists, is no longer enabled or is no longer visible to the current user.    NoMoreActiveSessions  The user is not allowed any more active sessions. Currently applies to XenDesktop only.    NotLicensed  The server does not have the required license to perform the requested activity.    UnavailableDesktop  No workstations are available to service this request. Currently applies to XenDesktop only.    CouldNotConnectToWorkstation  The server refused a connection. Currently applies to XenDesktop only.    WorkstationInMaintenance  The requested workstation is in maintenance mode and cannot be used. Currently applies to XenDesktop only.    ResourceError   GeneralAppLaunchError  General error that cannot be further specified.", 
            "title": "Failed Launch Error Codes"
        }, 
        {
            "location": "/launch/#retry-reason-codes", 
            "text": "If the response represents a delayed launch (launch type \u2018\u2019retry\u201d), then the contained retryReason will be one of the following values:     Launch retry reason  Description      rebooting  The requested workstation is rebooting.    resuming  The requested workstation is resuming.    unknown  Retry reason not covered by the other values.", 
            "title": "Retry Reason Codes"
        }, 
        {
            "location": "/launch/#remedy-hint-codes", 
            "text": "If the response represents a delayed or failed launch, then the response may contain a remedyHint value with one of the following values:     remdyHint values  Description      restart-desktop  The problem may be resolved by restarting the desktop.", 
            "title": "Remedy Hint Codes"
        }, 
        {
            "location": "/launch/#launch-examples", 
            "text": "", 
            "title": "Launch Examples"
        }, 
        {
            "location": "/launch/#example-successful-ica-launch", 
            "text": "", 
            "title": "Example: Successful Ica launch"
        }, 
        {
            "location": "/launch/#request_1", 
            "text": "POST https://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu/launch/ica HTTP/1.1 Accept: application/vnd.citrix.launchdata+xml\nAuthorization: CitrixAuth H4sIAAAAAAAEAO29B2AcS/T+x8z9Ajw4AAA==\nContent-Type: application/vnd.citrix.launchparams+xml\nContent-Length: xxx  ?xml version= 1.0  encoding= utf-16 ?  launchparams   xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance \n               xmlns:xsd= http://www.w3.org/2001/XMLSchema  xmlns= http://citrix.com/delivery-services/1-0/launchparams   deviceId clientname /deviceId \n   clientName clientname /clientName  /launchparams", 
            "title": "Request"
        }, 
        {
            "location": "/launch/#response_1", 
            "text": "HTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0 Content-Type: application/vnd.citrix.launchdata+xml Content-Length: xxxx  ?xml version= 1.0  encoding= utf-8 ?  launch   status= success   xmlns= http://citrix.com/delivery-services/1-0/launch   result   type= ica \n   ica ...[ICA File Content]... /ica  logonTicket +dPeXidrRyAgdyqJzX... /logonTicket   /result  /launch", 
            "title": "Response"
        }, 
        {
            "location": "/launch/#example-failed-rade-launch", 
            "text": "", 
            "title": "Example: Failed Rade launch"
        }, 
        {
            "location": "/launch/#request_2", 
            "text": "POST https://www.example.com/Citrix/Store/resources/v2/Q2l0cml4Lk1QUy5BcHAu/launch/rade HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.launchdata+xml\nAccept-Language: en-gb\nContent-Type: application/vnd.citrix.launchparams+xml Content-Length: xxx\nAuthorization: CitrixAuth H4sIA....  ?xml version= 1.0 ?  launchparams   xmlns= http://citrix.com/delivery-services/1-0/launchparams  deviceId clientname /deviceId   clientName clientname /clientName   clientAddress 127.0.0.1 /clientAddress  /launchparams", 
            "title": "Request"
        }, 
        {
            "location": "/launch/#response_2", 
            "text": "HTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.launchdata+xml Content-Length: xxx\nCache-Control: no-cache  ?xml version= 1.0 ?  launch   xmlns= http://citrix.com/delivery-services/1-0/launch \n         status= failure \n   result   type= error  error  id ResourceUnavailable /id  text The resource is unavailable /text \n     /error \n   /result  /launch", 
            "title": "Response"
        }, 
        {
            "location": "/launch/#example-ica-launch-with-retry", 
            "text": "", 
            "title": "Example: ICA launch with retry"
        }, 
        {
            "location": "/launch/#request_3", 
            "text": "POST http://www.example.com/Citrix/Store/resources/v2/Q2l0cm...Q-/launch/ica HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.launchdata+xml\nAccept-Language: en-gb\nContent-Type: application/vnd.citrix.launchparams+xml\nContent-Length: xxx\nAuthorization: CitrixAuth H4sIA....  ?xml version= 1.0 ?  launchparams   xmlns= http://citrix.com/delivery-services/1-0/launchparams  deviceId clientname /deviceId   clientName clientname /clientName   clientAddress 127.0.0.1 /clientAddress  /launchparams", 
            "title": "Request"
        }, 
        {
            "location": "/launch/#response_3", 
            "text": "HTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.launchdata+xml Content-Length: xxx\nContent-Language: en-gb\nCache-Control: no-cache  ?xml version= 1.0 ?  launch   status= retry   xmlns= http://citrix.com/delivery-services/1-0/launch \n   result   type= retry \n     retry  url http://www.example.com/Citrix/Store/resources/v2/Q2l0cm...Q-/launch/ica/bbb56 /url   after 30 /after  reason unknown /reason \n     /retry \n   /result  /launch   Note : The URL used in this next request is the one returned in the previous response, which includes the retry key: \u2018bbb567\u2019:", 
            "title": "Response"
        }, 
        {
            "location": "/launch/#request_4", 
            "text": "POST http://www.example.com/Citrix/Store/resources/v2/Q2l0cm...Q-/launch/ica/bbb567 HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.launchdata+xml\nAccept-Language: en-gb\nContent-Type: application/vnd.citrix.launchparams+xml Content-Length: xxx\nAuthorization: CitrixAuth H4sIA....  ?xml version= 1.0 ?  launchparams   xmlns= http://citrix.com/delivery-services/1-0/launchparams  deviceId clientname /deviceId   clientName clientname /clientName   clientAddress 127.0.0.1 /clientAddress  /launchparams", 
            "title": "Request"
        }, 
        {
            "location": "/launch/#response_4", 
            "text": "HTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0 Content-Type: application/vnd.citrix.launchdata+xml Content-Length: xxxx  ?xml version= 1.0  encoding= utf-8 ?  launch   status= success   xmlns= http://citrix.com/delivery-services/1-0/launch  result   type= ica  ica ...[ICA File Content]... /ica   logonTicket 85EB92973D2C3804F93A99AAEC232D /logonTicket \n  /result  /launch", 
            "title": "Response"
        }, 
        {
            "location": "/images-and-icons/", 
            "text": "Images and Icons\n\n\nThese services return the appropriate image/icon for a specified thumbprint. The two services are related, in that each is used to retrieve image data relating to one or more resource using the concept of a 'thumbprint' to allow sharing of image data for resources with equivalent images. The 'thumbprint' is designed to be the same for images with the same content. The services differ in that the image service will allow different sizes and format of image to be returned as desired by the caller, possibly resizing the raw images, while the icon service will always return all of the raw images combined into a single file in the Microsoft icon (.ico) format.\n\n\nRequest\n\n\n\n\n\n\n\n\nURL (indicative only)\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n/resources/v2/{thumbprint}/image[/{size}]\n\n\nGET\n\n\nReturns the specified image. See below for details on the format and other details of the response.\n\n\n\n\n\n\n/resources/v2/{thumbprint}/icon\n\n\nGET\n\n\nReturns the specified icon data in the image/vnd.microsoft.icon format.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n{thumbprint}\n\n\nThe thumbprint for the image/icon. This value is typically generated in the data returned to a GET request to /resources[/{id}] and is generated for the image data at that moment and so may be different in a subsequent call if the image data has changed. This value is also unique to the instance of the service.\n\n\n\n\n\n\n{size}\n\n\nThe size of the image to return (defaults to 32 if no value is supplied). Only the values 16, 24, 32, 48, 64, 96, 128, 256 and 512 are supported.\n\n\n\n\n\n\nclientName, clientAddress\n\n\nSee Client Name, Client Address and Device Id section above.\n\n\n\n\n\n\n\n\nNotes\n:\n\n\n\n\nThese requests require an Authorisation token\n\n\nThe URLs for requests for image/icon data are illustrative only. The actual URLs should be obtained from the Response to resource enumeration (i.e. /resources/v2/ or /resources/v2/{id}) which will return the URL.\n\n\nHowever, the optional suffix of the image request (i.e. [/{size}] ) must be constructed by the client.\n\n\nThe response image format is determined by the requested content type (i.e. the value(s) for the Accept header). The recognised content types are: image/png, and image/gif. Additionally the wildcard values image/\n and \n/\n are also recognised as referring to all supported content types in no defined order. If multiple content types are specified, then specific contents types (e.g. image/gif) are taken as higher precedence than wildcard types (e.g. image/\n) and the order is taken to indicate preference amongst specific content types. Accept headers with \u2018q\u2019 values are ignored. See http://www.ietf.org/rfc/rfc2616.txt section 14.1 for details on Accept headers.\n\n\nThe images service will always return an image of the requested format and size (or its best choice if not specified) even if this requires resizing the raw image data.\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nResponse Code\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200 (OK)\n\n\nSuccess\n\n\n\n\n\n\n401 (Unauthorized)\n\n\nBad/Missing security token (see CitrixAuth Authentication Scheme document [3])\n\n\n\n\n\n\n400 (Bad Request)\n\n\nInvalid size parameter.\n\n\n\n\n\n\n404\n\n\nUnknown/missing thumbprint.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse Format\n\n\nRequest Accept /Response Content-Type Header\n\n\n\n\n\n\n\n\n\n\nGIF\n\n\nimage/gif\n\n\n\n\n\n\nPNG\n\n\nimage/png\n\n\n\n\n\n\n\n\nExample: Successful request for a 32x32 png image\n\n\nRequest\n\n\nGET http://www.example.com/Citrix/Store/resources/v2/5C6D3CD...7A/image/32 HTTP/1.1 Accept: image/png\nAuthorization: CitrixAuth H4sIA....\nHost: www.example.com\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: image/png\nContent-Length: 2627\n\n... 32 x 32 png image data ...\n\n\n\n\n\nExample: Successful request for a default-sized gif image\n\n\nThe request uses Accept headers to give image/gif as its required format, it also specifies no size, so the server returns the default size, i.e. 32.\n\n\nRequest\n\n\nGET http://www.example.com/Citrix/Store/resources/v2/5C6D3CD...7A/image HTTP/1.1 Accept: image/gif\nAuthorization: CitrixAuth H4sIA....\nHost: www.example.com\nConnection: Keep-Alive\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: image/gif\nContent-Length: xxxx\n\n... 32 x 32 gif image data ...", 
            "title": "Images and Icons"
        }, 
        {
            "location": "/images-and-icons/#images-and-icons", 
            "text": "These services return the appropriate image/icon for a specified thumbprint. The two services are related, in that each is used to retrieve image data relating to one or more resource using the concept of a 'thumbprint' to allow sharing of image data for resources with equivalent images. The 'thumbprint' is designed to be the same for images with the same content. The services differ in that the image service will allow different sizes and format of image to be returned as desired by the caller, possibly resizing the raw images, while the icon service will always return all of the raw images combined into a single file in the Microsoft icon (.ico) format.", 
            "title": "Images and Icons"
        }, 
        {
            "location": "/images-and-icons/#request", 
            "text": "URL (indicative only)  Method  Description      /resources/v2/{thumbprint}/image[/{size}]  GET  Returns the specified image. See below for details on the format and other details of the response.    /resources/v2/{thumbprint}/icon  GET  Returns the specified icon data in the image/vnd.microsoft.icon format.        Parameter  Description      {thumbprint}  The thumbprint for the image/icon. This value is typically generated in the data returned to a GET request to /resources[/{id}] and is generated for the image data at that moment and so may be different in a subsequent call if the image data has changed. This value is also unique to the instance of the service.    {size}  The size of the image to return (defaults to 32 if no value is supplied). Only the values 16, 24, 32, 48, 64, 96, 128, 256 and 512 are supported.    clientName, clientAddress  See Client Name, Client Address and Device Id section above.     Notes :   These requests require an Authorisation token  The URLs for requests for image/icon data are illustrative only. The actual URLs should be obtained from the Response to resource enumeration (i.e. /resources/v2/ or /resources/v2/{id}) which will return the URL.  However, the optional suffix of the image request (i.e. [/{size}] ) must be constructed by the client.  The response image format is determined by the requested content type (i.e. the value(s) for the Accept header). The recognised content types are: image/png, and image/gif. Additionally the wildcard values image/  and  /  are also recognised as referring to all supported content types in no defined order. If multiple content types are specified, then specific contents types (e.g. image/gif) are taken as higher precedence than wildcard types (e.g. image/ ) and the order is taken to indicate preference amongst specific content types. Accept headers with \u2018q\u2019 values are ignored. See http://www.ietf.org/rfc/rfc2616.txt section 14.1 for details on Accept headers.  The images service will always return an image of the requested format and size (or its best choice if not specified) even if this requires resizing the raw image data.", 
            "title": "Request"
        }, 
        {
            "location": "/images-and-icons/#response", 
            "text": "Response Code  Description      200 (OK)  Success    401 (Unauthorized)  Bad/Missing security token (see CitrixAuth Authentication Scheme document [3])    400 (Bad Request)  Invalid size parameter.    404  Unknown/missing thumbprint.        Response Format  Request Accept /Response Content-Type Header      GIF  image/gif    PNG  image/png", 
            "title": "Response"
        }, 
        {
            "location": "/images-and-icons/#example-successful-request-for-a-32x32-png-image", 
            "text": "", 
            "title": "Example: Successful request for a 32x32 png image"
        }, 
        {
            "location": "/images-and-icons/#request_1", 
            "text": "GET http://www.example.com/Citrix/Store/resources/v2/5C6D3CD...7A/image/32 HTTP/1.1 Accept: image/png\nAuthorization: CitrixAuth H4sIA....\nHost: www.example.com", 
            "title": "Request"
        }, 
        {
            "location": "/images-and-icons/#response_1", 
            "text": "HTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: image/png\nContent-Length: 2627\n\n... 32 x 32 png image data ...", 
            "title": "Response"
        }, 
        {
            "location": "/images-and-icons/#example-successful-request-for-a-default-sized-gif-image", 
            "text": "The request uses Accept headers to give image/gif as its required format, it also specifies no size, so the server returns the default size, i.e. 32.", 
            "title": "Example: Successful request for a default-sized gif image"
        }, 
        {
            "location": "/images-and-icons/#request_2", 
            "text": "GET http://www.example.com/Citrix/Store/resources/v2/5C6D3CD...7A/image HTTP/1.1 Accept: image/gif\nAuthorization: CitrixAuth H4sIA....\nHost: www.example.com\nConnection: Keep-Alive", 
            "title": "Request"
        }, 
        {
            "location": "/images-and-icons/#response_2", 
            "text": "HTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: image/gif\nContent-Length: xxxx\n\n... 32 x 32 gif image data ...", 
            "title": "Response"
        }, 
        {
            "location": "/machine-power-off/", 
            "text": "Machine Power Off\n\n\nThis service triggers the physical machine for the specified resource to be powered down. Only specific resources support this action, and typically only for a limited set of users. Due to limitations on the XenDesktop server, this service may return with a timed-out error response, even if the power off is successful, if it does not happen within a required time-limit.\n\n\nRequest\n\n\n\n\n\n\n\n\nURL (indicative only)\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n/resources/v2/{id}/poweroff\n\n\nPOST\n\n\nReturns the result of triggering a Power Off operation on the underlying machine. See below for details on the format of the response.\n\n\n\n\n\n\n\n\nNotes\n:\n\n\n\n\nThe URLs given above are for illustrative purposes only. The actual URL used in a request should be obtained from the server in the response to a resource enumeration request (e.g. /resources/v2/).\n\n\nThe data POSTed is Xml described by the schema: /Schemas/ MachinePowerOffParams.xsd\n\n\nThe request content-type must be: application/vnd.citrix.machinepoweroffparams+xml\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nResponse Code\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200\n\n\nPowerOff request sent to machine leading to success/failure of power off operation.\n\n\n\n\n\n\n401\n\n\nBad/Missing security token \n(see CitrixAuth Authentication Scheme document [3])\n\n\n\n\n\n\n404\n\n\nResource identified by {id} was not found or the power-off action did not exist or was not enabled for that resource for the current user.\n The reason is indicated by the X-Citrix-Error-Reason header value in the HTTP response: \nResourceNotFound\n: No resource was found for the requesting user for the specified id. \n \nResourceDisabled\n: The resource was found but was not enabled.\n \nUnsupportedOperation\n: ICA launch was not supported for this resource.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse Format\n\n\nRequest Accept /Response Content-Type Header\n\n\n\n\n\n\n\n\n\n\nXml\n\n\napplication/vnd.citrix.machinepoweroff+xml\n\n\n\n\n\n\n\n\nThe response returns data regarding the power off request indicating whether the power off operation succeeded. If unsuccessful, the error reason is indicated with an error id. The response is Xml, the schema for which can be found at: /Schemas/MachinePowerOff.xsd.\n\n\n\n\n\n\n\n\nError Id\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\"in-maintenance-mode\"\n\n\nThe requested operation couldn't be performed because the machine is in maintenance mode.\n\n\n\n\n\n\n\"no-machine\"\n\n\nNo assigned machines were found for the user in the specified machine group.\n\n\n\n\n\n\n\"not-supported\"\n\n\nThe requested operation is not supported on the requested machine group type.\n\n\n\n\n\n\n\"operation-in-progress\"\n\n\nThe server is busy with a control operation on the specified machine and cannot handle another request at this time.\n\n\n\n\n\n\n\"timed-out\"\n\n\nThe server timed out waiting for the request to complete.\n \nNote\n: The power off operation may have succeeded, but not within the timeout period defined on the XenDesktop server.\n\n\n\n\n\n\n\"not-trusted\"\n\n\nThe client is not trusted to perform the requested operation. This does not imply whether the credentials supplied are/are not valid.\n\n\n\n\n\n\n\"unspecified\"\n\n\nError condition not covered by the other values.\n\n\n\n\n\n\n\n\nExample: Successful PowerOff\n\n\nRequest\n\n\nPOST http://www.example.com/resources/v2/1234...789/poweroff HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.machinepoweroff+xml\nAccept-Language: en-gb\nContent-Type: application/vnd.citrix.machinepoweroffparams+xml Content-Length: 0\nAuthorization: CitrixAuth security-token\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nmachinepoweroffparams\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/machinepoweroffparams\n\n  \nclientName\nclientname\n/clientName\n\n\n/machinepoweroffparams\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.machinepoweroff+xml Content-Length: xxx\nContent-Language: en-gb\nCache-Control: no-cache\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nmachinepoweroff\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/machinepoweroff\n\n        \nstatus=\nsuccess\n\n\n/machinepoweroff", 
            "title": "Machine Power Off"
        }, 
        {
            "location": "/machine-power-off/#machine-power-off", 
            "text": "This service triggers the physical machine for the specified resource to be powered down. Only specific resources support this action, and typically only for a limited set of users. Due to limitations on the XenDesktop server, this service may return with a timed-out error response, even if the power off is successful, if it does not happen within a required time-limit.", 
            "title": "Machine Power Off"
        }, 
        {
            "location": "/machine-power-off/#request", 
            "text": "URL (indicative only)  Method  Description      /resources/v2/{id}/poweroff  POST  Returns the result of triggering a Power Off operation on the underlying machine. See below for details on the format of the response.     Notes :   The URLs given above are for illustrative purposes only. The actual URL used in a request should be obtained from the server in the response to a resource enumeration request (e.g. /resources/v2/).  The data POSTed is Xml described by the schema: /Schemas/ MachinePowerOffParams.xsd  The request content-type must be: application/vnd.citrix.machinepoweroffparams+xml", 
            "title": "Request"
        }, 
        {
            "location": "/machine-power-off/#response", 
            "text": "Response Code  Description      200  PowerOff request sent to machine leading to success/failure of power off operation.    401  Bad/Missing security token  (see CitrixAuth Authentication Scheme document [3])    404  Resource identified by {id} was not found or the power-off action did not exist or was not enabled for that resource for the current user.  The reason is indicated by the X-Citrix-Error-Reason header value in the HTTP response:  ResourceNotFound : No resource was found for the requesting user for the specified id.    ResourceDisabled : The resource was found but was not enabled.   UnsupportedOperation : ICA launch was not supported for this resource.        Response Format  Request Accept /Response Content-Type Header      Xml  application/vnd.citrix.machinepoweroff+xml     The response returns data regarding the power off request indicating whether the power off operation succeeded. If unsuccessful, the error reason is indicated with an error id. The response is Xml, the schema for which can be found at: /Schemas/MachinePowerOff.xsd.     Error Id  Description      \"in-maintenance-mode\"  The requested operation couldn't be performed because the machine is in maintenance mode.    \"no-machine\"  No assigned machines were found for the user in the specified machine group.    \"not-supported\"  The requested operation is not supported on the requested machine group type.    \"operation-in-progress\"  The server is busy with a control operation on the specified machine and cannot handle another request at this time.    \"timed-out\"  The server timed out waiting for the request to complete.   Note : The power off operation may have succeeded, but not within the timeout period defined on the XenDesktop server.    \"not-trusted\"  The client is not trusted to perform the requested operation. This does not imply whether the credentials supplied are/are not valid.    \"unspecified\"  Error condition not covered by the other values.", 
            "title": "Response"
        }, 
        {
            "location": "/machine-power-off/#example-successful-poweroff", 
            "text": "", 
            "title": "Example: Successful PowerOff"
        }, 
        {
            "location": "/machine-power-off/#request_1", 
            "text": "POST http://www.example.com/resources/v2/1234...789/poweroff HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.machinepoweroff+xml\nAccept-Language: en-gb\nContent-Type: application/vnd.citrix.machinepoweroffparams+xml Content-Length: 0\nAuthorization: CitrixAuth security-token  ?xml version= 1.0 ?  machinepoweroffparams   xmlns= http://citrix.com/delivery-services/1-0/machinepoweroffparams \n   clientName clientname /clientName  /machinepoweroffparams", 
            "title": "Request"
        }, 
        {
            "location": "/machine-power-off/#response_1", 
            "text": "HTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.machinepoweroff+xml Content-Length: xxx\nContent-Language: en-gb\nCache-Control: no-cache  ?xml version= 1.0 ?  machinepoweroff   xmlns= http://citrix.com/delivery-services/1-0/machinepoweroff \n         status= success  /machinepoweroff", 
            "title": "Response"
        }, 
        {
            "location": "/rade-service/", 
            "text": "Rade Service\n\n\nThe Rade client requires a proxying service to pass various messages to the XenApp server. The StoreFront Services will supply a service with the same behavior as the Rade service in Citrix Web Interface. This will therefore not follow the standard patterns of the other StoreFront services.\n\n\nRequest\n\n\n\n\n\n\n\n\nURL (indicative only)\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n/resources/v2/streaming\n\n\nPOST\n\n\nPass the supplied POST body, which should be a well-formed rade 1.1 request Xml message, to the appropriate XenApp server. Returns the rade 1.1 response Xml message.\n\n\n\n\n\n\n\n\nNote\n: The URLs given above are for illustrative purposes only. The actual URL used in a request should be obtained from the .rad file supplied to the Rade client.\n\n\nResponse\n\n\n\n\n\n\n\n\nResponse Code\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200\n\n\nFor backwards compatibility, this response code is used in all circumstances.", 
            "title": "Rade Service"
        }, 
        {
            "location": "/rade-service/#rade-service", 
            "text": "The Rade client requires a proxying service to pass various messages to the XenApp server. The StoreFront Services will supply a service with the same behavior as the Rade service in Citrix Web Interface. This will therefore not follow the standard patterns of the other StoreFront services.", 
            "title": "Rade Service"
        }, 
        {
            "location": "/rade-service/#request", 
            "text": "URL (indicative only)  Method  Description      /resources/v2/streaming  POST  Pass the supplied POST body, which should be a well-formed rade 1.1 request Xml message, to the appropriate XenApp server. Returns the rade 1.1 response Xml message.     Note : The URLs given above are for illustrative purposes only. The actual URL used in a request should be obtained from the .rad file supplied to the Rade client.", 
            "title": "Request"
        }, 
        {
            "location": "/rade-service/#response", 
            "text": "Response Code  Description      200  For backwards compatibility, this response code is used in all circumstances.", 
            "title": "Response"
        }, 
        {
            "location": "/subscriptions-service/", 
            "text": "Subscriptions Service\n\n\nThis service allows resources to be subscribed and unsubscribed, and to have data associated with each subscription.\n\n\nRequest\n\n\n\n\n\n\n\n\nURL (indicative only) and Content-Type\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n/resources/v2/subscriptions/{resourceId} application/vnd.citrix.subscriptionupdate+xml\n\n\nPOST\n\n\nAction depends upon updateType attribute value:\nsubscribe\n: Try to subscribe to the resource. This may create a new subscription (if one does not already exist) and by default will set the subscription to the subscribed state (although later extensions may complicate this behaviour).\nunsubscribe\n : Try to unsubscribe from the resource. This may delete the subscription and by default will set the subscription to the notSubscribed state (although later extensions may complicate this behaviour).\nupdate\n: Update the data associated with the subscription. This should succeed independent of future extensions, although will return 404 (Not Found) if no subscription exists.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n{resourceId}\n\n\nThe identifier of the associated resource. This is unique to the instance of the service.\n\n\n\n\n\n\n\n\nNote\n: The URLs given above are for illustrative purposes only. The actual URL used in a request should be obtained from the results of an enumeration request (eg /resources/v2/ or /resources/v2/{id}).\n\n\nRequest data\n\n\nThe POSTed requests are Xml, described by the schema: /Schemas/Subscriptions.xsd, with top level element subscriptionUpdate.\n\n\nResponse\n\n\n\n\n\n\n\n\nResponse Code (and friendly name)\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200 (OK)\n\n\nSubscription added/removed successfully or conflict occurred, the response content-type indicates which. See Success Response Content and Conflict Response Content sections below. \nThe conflict response is returned in any of the following cases:\n A request is made to subscribe to a resource in an incompatible state (e.g. subscribed).\n A request is made to unsubscribe from a resource in an incompatible state (e.g. unsubscribed).\n \n A request is made to update data for a resource with no subscription record.\n \n An unspecified data conflict occurs due to clash with another simultaneous request.\n \n An extension (e.g. workflow integration) indicates a conflict in state (see relevant extension specification for details).\n\n\n\n\n\n\n202 (Accepted)\n\n\nThe request to subscribe/unsubscribe has been accepted, however there is workflow associated with the subscription/unsubscription which must be completed before the action will be complete.\n\n\n\n\n\n\n400 (Bad Request)\n\n\nMissing {id} value or malformed data in the request body.\n\n\n\n\n\n\n401 (Unauthorized)\n\n\nBad/Missing security token \n (see CitrixAuth Authentication Scheme document [3])\n\n\n\n\n\n\n403 (Forbidden)\n\n\nThe request token did not contain a user security identifier claim (this is required to give a unique identifier for the user for recording subscriptions)\n\n\n\n\n\n\n404 (Not Found)\n\n\nSubscriptions are not enabled or the supplied resourceId does not refer to a resource visible to the requesting user.\nThe reason is indicated by the X-Citrix-Error-Reason header value in the HTTP response:\nResourceNotFound\n: No resource was found for the requesting user for the specified id.\nSubscriptionsDisabled\n: Subscriptions are not enabled for the Store service. (Not expected unless advanced customization is performed on the server.)\nSubscriptionsReadOnly\n: Subscriptions are read only for the Store service\n\n\n\n\n\n\n503 (Service Unavailable)\n\n\nAn extension is temporarily unable to contact a service it requires to contact as part of the subscription process (see relevant extension specification for details)\n\n\n\n\n\n\n\n\nSuccess Response Content\n\n\nIn the case that a successful response (HTTP status code 200 (OK)) is returned, the response body contains an Xml document, described by the schema: /Schemas/Subscriptions.xsd with root node subscriptionResult. The response contains the subscription and resource ids, current status of the subscription, and also properties that contain data relating to the subscription action (this data is empty except in the case of extensions):\n\n\n\n\n\n\n\n\nResponse Format\n\n\nRequest Accept /Response Content-Type Header\n\n\n\n\n\n\n\n\n\n\nXml\n\n\napplication/vnd.citrix.subscriptionresult+xml\n\n\n\n\n\n\n\n\nNotes\n:\n\n\n\n\nThe data Xml element of the subscription result may contain properties that relate to the status change that has occurred as a result of the subscribe/unsubscribe action. This is intended as an extension mechanism.\n\n\nNo account is made in the subscribe/unsubscribe actions what permissions, if any, the requesting user has on the resource identified by {resourceId}, other than that it is visible to that user.\n\n\n\n\nSubscription Status\n\n\n\n\n\n\n\n\nStatus\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nnotSubscribed\n\n\nThe resource is not subscribed.\n\n\n\n\n\n\nsubscribed\n\n\nThe resource is subscribed.\n\n\n\n\n\n\napproved\n\n\nWorkflow has run and the user has been granted permission to use the resource. The subscription is awaiting user acknowledgement.\n\n\n\n\n\n\ndenied\n\n\nWorkflow has run and the user has been denied permission to use the resource. The subscription is awaiting user acknowledgement.\n\n\n\n\n\n\nAll other values\n\n\nWorkflow is running to determine whether the user may use the resource.\n\n\n\n\n\n\n\n\nExample: Successful Unsubscription\n\n\nRequest\n\n\nPOST http://www.example.com/Citrix/Store/resources/v2/subscriptions/Q2l0cm...Q- HTTP/1.1 Authorization: CitrixAuth H4sIA....\nHost: www.example.com\nAccepts: application/vnd.citrix.subscriptionresult+xml,\napplication/vnd.citrix.subscriptionconflict+xml Content-Type: application/vnd.citrix.subscriptionupdate+xml Content-Length: 269\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nsubscriptionUpdate\n \nxmlns=\nhttp://citrix.com/delivery-services/2-0/subscriptions\n\n       \nupdateType=\nunsubscribe\n\n       \nupdateDataMode=\nmerge\n\n  \nclientName\nclientname\n/clientName\n\n\n/subscriptionUpdate\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.subscriptionresult+xml Date: Wed, 16 Feb 2011 17:31:43 GMT\nContent-Length: xxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nsubscriptionResult\n \nxmlns=\nhttp://citrix.com/delivery-services/2-0/subscriptions\n\n\nsubscriptionId\n4C34BB98E543F084BAA33696C5659F63\n/subscriptionId\n \nresourceId\nCitrix.MPS.App.Farm 1.Notepad\n/resourceId\n \nstatus\nnotSubscribed\n/status\n\n\ndata\n \n/\n\n\n/subscriptionResult\n\n\n\n\n\n\nExample: Successful Update of Subscription Data\n\n\nThis is an example of a successful update of the data associated with a subscription. The property ids and values are arbitrary from the perspective of the Resources service.\n\n\nRequest\n\n\nPOST http://www.example.com/Citrix/Store/resources/v2/subscriptions/Q2l0cm...Q- HTTP/1.1 Authorization: CitrixAuth H4sIA....\nHost: www.example.com\nAccepts: application/vnd.citrix.subscriptionresult+xml,\napplication/vnd.citrix.subscriptionconflict+xml Content-Type: application/vnd.citrix.subscriptionupdate+xml Content-Length: xxxx\nExpect: 100-continue\nConnection: Keep-Alive\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nsubscriptionUpdate\n \nxmlns=\nhttp://citrix.com/delivery-services/2-0/subscriptions\n\n       \nupdateType=\nupdate\n\n       \nupdateDataMode=\nmerge\n \n\n  \ndata\n\n    \nproperty\n \nkey=\nData1Key\n\n      \nvalue\nData1 Value1\n/value\n\n      \nvalue\nData1 Value2\n/value\n\n    \n/property\n\n  \n/data\n\n  \nclientName\nclientname\n/clientName\n\n\n/subscriptionUpdate\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.subscriptionresult+xml Content-Length: xxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nsubscriptionResult\n \nxmlns=\nhttp://citrix.com/delivery-services/2-0/subscriptions\n\n\nsubscriptionId\n4C34BB98E543F084BAA33696C5659F63\n/subscriptionId\n \nresourceId\nCitrix.MPS.App.Farm 1.Notepad\n/resourceId\n \nstatus\nsubscribed\n/status\n\n\ndata\n \n/\n\n\n/subscriptionResult\n\n\n\n\n\n\nConflict Response Content\n\n\nIn the case that a conflict is returned (HTTP status code 200 (OK)), a response potentially containing data pertaining to the conflict is returned in the response body:\n\n\n\n\n\n\n\n\nResponse Format\n\n\nRequest Accept /Response Content-Type Header\n\n\n\n\n\n\n\n\n\n\nXml\n\n\napplication/vnd.citrix.subscriptionconflict+xml\n\n\n\n\n\n\n\n\nThe subscription result content is Xml, described by the schema: /Schemas/Subscriptions.xsd with root node \nsubscriptionConflict\n.\n\n\nNote\n: The subscriptionconflict content type is intended to allow for extension, and will only contain properties in the case of extensions (e.g. workflow integration).\n\n\nConflict Reason\n\n\nThe conflict response contains a reason attribute. The possible reason values are an open set allowing for workflow-integration- specific values in the future. The values defined in the base system are:\n\n\n\n\n\n\n\n\nReason value\n\n\nMeaning\n\n\n\n\n\n\n\n\n\n\nGeneralDataStoreConflict\n\n\nAn undetermined conflict within the subscription data storage (typically due to transaction conflicts).\n\n\n\n\n\n\nMissingSubscription\n\n\nA conflict due to a missing subscription.\n(e.g. an attempt to unsubscribe or update a subscription to a resource that has never been subscribed.)\n\n\n\n\n\n\nConflictingSubscriptionState\n\n\nA conflict due to the state of an existing subscription.\n(e.g. an attempt to subscribe to a resource with a subscription with status subscribed.)\n\n\n\n\n\n\nGeneralWorkflowConflict\n\n\nA conflict caused by an undetermined conflict within the wokflow system.\n\n\n\n\n\n\n\n\nExample: Unsuccessful Subscription\n\n\nAn example of an attempted subscription that is unsuccessful because the resource is already subscribed.\n\n\nThe subscription, if successful, would have associated a client-specific property named \u201cdazzle:path\u201d with the subscription. The property id and value are arbitrary from the perspective of the Resources service.\n\n\nRequest\n\n\nPOST http://www.example.com/Citrix/Store/resources/v2/subscriptions/Q2l0cm...Q- HTTP/1.1 Authorization: CitrixAuth H4sIA....\nHost: www.example.com\nAccepts: application/vnd.citrix.subscriptionresult+xml,\napplication/vnd.citrix.subscriptionconflict+xml Content-Type: application/vnd.citrix.subscriptionupdate+xml Content-Length: xxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nsubscriptionUpdate\n \nxmlns=\nhttp://citrix.com/delivery-services/2-0/subscriptions\n\n       \nupdateType=\nsubscribe\n\n       \nupdateDataMode=\nmerge\n \n/\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.subscriptionconflict+xml Content-Length: xxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nsubscriptionConflict\n \nxmlns=\nhttp://citrix.com/delivery-services/2-0/subscriptions\n\n       \nreason=\nConflictingSubscriptionState\n \n\n \ndata\n \n/\n\n\n/subscriptionConflict", 
            "title": "Subscriptions Service"
        }, 
        {
            "location": "/subscriptions-service/#subscriptions-service", 
            "text": "This service allows resources to be subscribed and unsubscribed, and to have data associated with each subscription.", 
            "title": "Subscriptions Service"
        }, 
        {
            "location": "/subscriptions-service/#request", 
            "text": "URL (indicative only) and Content-Type  Method  Description      /resources/v2/subscriptions/{resourceId} application/vnd.citrix.subscriptionupdate+xml  POST  Action depends upon updateType attribute value: subscribe : Try to subscribe to the resource. This may create a new subscription (if one does not already exist) and by default will set the subscription to the subscribed state (although later extensions may complicate this behaviour). unsubscribe  : Try to unsubscribe from the resource. This may delete the subscription and by default will set the subscription to the notSubscribed state (although later extensions may complicate this behaviour). update : Update the data associated with the subscription. This should succeed independent of future extensions, although will return 404 (Not Found) if no subscription exists.        Parameter  Description      {resourceId}  The identifier of the associated resource. This is unique to the instance of the service.     Note : The URLs given above are for illustrative purposes only. The actual URL used in a request should be obtained from the results of an enumeration request (eg /resources/v2/ or /resources/v2/{id}).", 
            "title": "Request"
        }, 
        {
            "location": "/subscriptions-service/#request-data", 
            "text": "The POSTed requests are Xml, described by the schema: /Schemas/Subscriptions.xsd, with top level element subscriptionUpdate.", 
            "title": "Request data"
        }, 
        {
            "location": "/subscriptions-service/#response", 
            "text": "Response Code (and friendly name)  Description      200 (OK)  Subscription added/removed successfully or conflict occurred, the response content-type indicates which. See Success Response Content and Conflict Response Content sections below.  The conflict response is returned in any of the following cases:  A request is made to subscribe to a resource in an incompatible state (e.g. subscribed).  A request is made to unsubscribe from a resource in an incompatible state (e.g. unsubscribed).    A request is made to update data for a resource with no subscription record.    An unspecified data conflict occurs due to clash with another simultaneous request.    An extension (e.g. workflow integration) indicates a conflict in state (see relevant extension specification for details).    202 (Accepted)  The request to subscribe/unsubscribe has been accepted, however there is workflow associated with the subscription/unsubscription which must be completed before the action will be complete.    400 (Bad Request)  Missing {id} value or malformed data in the request body.    401 (Unauthorized)  Bad/Missing security token   (see CitrixAuth Authentication Scheme document [3])    403 (Forbidden)  The request token did not contain a user security identifier claim (this is required to give a unique identifier for the user for recording subscriptions)    404 (Not Found)  Subscriptions are not enabled or the supplied resourceId does not refer to a resource visible to the requesting user. The reason is indicated by the X-Citrix-Error-Reason header value in the HTTP response: ResourceNotFound : No resource was found for the requesting user for the specified id. SubscriptionsDisabled : Subscriptions are not enabled for the Store service. (Not expected unless advanced customization is performed on the server.) SubscriptionsReadOnly : Subscriptions are read only for the Store service    503 (Service Unavailable)  An extension is temporarily unable to contact a service it requires to contact as part of the subscription process (see relevant extension specification for details)", 
            "title": "Response"
        }, 
        {
            "location": "/subscriptions-service/#success-response-content", 
            "text": "In the case that a successful response (HTTP status code 200 (OK)) is returned, the response body contains an Xml document, described by the schema: /Schemas/Subscriptions.xsd with root node subscriptionResult. The response contains the subscription and resource ids, current status of the subscription, and also properties that contain data relating to the subscription action (this data is empty except in the case of extensions):     Response Format  Request Accept /Response Content-Type Header      Xml  application/vnd.citrix.subscriptionresult+xml     Notes :   The data Xml element of the subscription result may contain properties that relate to the status change that has occurred as a result of the subscribe/unsubscribe action. This is intended as an extension mechanism.  No account is made in the subscribe/unsubscribe actions what permissions, if any, the requesting user has on the resource identified by {resourceId}, other than that it is visible to that user.", 
            "title": "Success Response Content"
        }, 
        {
            "location": "/subscriptions-service/#subscription-status", 
            "text": "Status  Description      notSubscribed  The resource is not subscribed.    subscribed  The resource is subscribed.    approved  Workflow has run and the user has been granted permission to use the resource. The subscription is awaiting user acknowledgement.    denied  Workflow has run and the user has been denied permission to use the resource. The subscription is awaiting user acknowledgement.    All other values  Workflow is running to determine whether the user may use the resource.", 
            "title": "Subscription Status"
        }, 
        {
            "location": "/subscriptions-service/#example-successful-unsubscription", 
            "text": "", 
            "title": "Example: Successful Unsubscription"
        }, 
        {
            "location": "/subscriptions-service/#request_1", 
            "text": "POST http://www.example.com/Citrix/Store/resources/v2/subscriptions/Q2l0cm...Q- HTTP/1.1 Authorization: CitrixAuth H4sIA....\nHost: www.example.com\nAccepts: application/vnd.citrix.subscriptionresult+xml,\napplication/vnd.citrix.subscriptionconflict+xml Content-Type: application/vnd.citrix.subscriptionupdate+xml Content-Length: 269  ?xml version= 1.0  encoding= utf-8 ?  subscriptionUpdate   xmlns= http://citrix.com/delivery-services/2-0/subscriptions \n        updateType= unsubscribe \n        updateDataMode= merge \n   clientName clientname /clientName  /subscriptionUpdate", 
            "title": "Request"
        }, 
        {
            "location": "/subscriptions-service/#response_1", 
            "text": "HTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.subscriptionresult+xml Date: Wed, 16 Feb 2011 17:31:43 GMT\nContent-Length: xxxx  ?xml version= 1.0  encoding= utf-8 ?  subscriptionResult   xmlns= http://citrix.com/delivery-services/2-0/subscriptions  subscriptionId 4C34BB98E543F084BAA33696C5659F63 /subscriptionId   resourceId Citrix.MPS.App.Farm 1.Notepad /resourceId   status notSubscribed /status  data   /  /subscriptionResult", 
            "title": "Response"
        }, 
        {
            "location": "/subscriptions-service/#example-successful-update-of-subscription-data", 
            "text": "This is an example of a successful update of the data associated with a subscription. The property ids and values are arbitrary from the perspective of the Resources service.", 
            "title": "Example: Successful Update of Subscription Data"
        }, 
        {
            "location": "/subscriptions-service/#request_2", 
            "text": "POST http://www.example.com/Citrix/Store/resources/v2/subscriptions/Q2l0cm...Q- HTTP/1.1 Authorization: CitrixAuth H4sIA....\nHost: www.example.com\nAccepts: application/vnd.citrix.subscriptionresult+xml,\napplication/vnd.citrix.subscriptionconflict+xml Content-Type: application/vnd.citrix.subscriptionupdate+xml Content-Length: xxxx\nExpect: 100-continue\nConnection: Keep-Alive  ?xml version= 1.0  encoding= utf-8 ?  subscriptionUpdate   xmlns= http://citrix.com/delivery-services/2-0/subscriptions \n        updateType= update \n        updateDataMode= merge   \n   data \n     property   key= Data1Key \n       value Data1 Value1 /value \n       value Data1 Value2 /value \n     /property \n   /data \n   clientName clientname /clientName  /subscriptionUpdate", 
            "title": "Request"
        }, 
        {
            "location": "/subscriptions-service/#response_2", 
            "text": "HTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.subscriptionresult+xml Content-Length: xxxx  ?xml version= 1.0  encoding= utf-8 ?  subscriptionResult   xmlns= http://citrix.com/delivery-services/2-0/subscriptions  subscriptionId 4C34BB98E543F084BAA33696C5659F63 /subscriptionId   resourceId Citrix.MPS.App.Farm 1.Notepad /resourceId   status subscribed /status  data   /  /subscriptionResult", 
            "title": "Response"
        }, 
        {
            "location": "/subscriptions-service/#conflict-response-content", 
            "text": "In the case that a conflict is returned (HTTP status code 200 (OK)), a response potentially containing data pertaining to the conflict is returned in the response body:     Response Format  Request Accept /Response Content-Type Header      Xml  application/vnd.citrix.subscriptionconflict+xml     The subscription result content is Xml, described by the schema: /Schemas/Subscriptions.xsd with root node  subscriptionConflict .  Note : The subscriptionconflict content type is intended to allow for extension, and will only contain properties in the case of extensions (e.g. workflow integration).", 
            "title": "Conflict Response Content"
        }, 
        {
            "location": "/subscriptions-service/#conflict-reason", 
            "text": "The conflict response contains a reason attribute. The possible reason values are an open set allowing for workflow-integration- specific values in the future. The values defined in the base system are:     Reason value  Meaning      GeneralDataStoreConflict  An undetermined conflict within the subscription data storage (typically due to transaction conflicts).    MissingSubscription  A conflict due to a missing subscription. (e.g. an attempt to unsubscribe or update a subscription to a resource that has never been subscribed.)    ConflictingSubscriptionState  A conflict due to the state of an existing subscription. (e.g. an attempt to subscribe to a resource with a subscription with status subscribed.)    GeneralWorkflowConflict  A conflict caused by an undetermined conflict within the wokflow system.", 
            "title": "Conflict Reason"
        }, 
        {
            "location": "/subscriptions-service/#example-unsuccessful-subscription", 
            "text": "An example of an attempted subscription that is unsuccessful because the resource is already subscribed.  The subscription, if successful, would have associated a client-specific property named \u201cdazzle:path\u201d with the subscription. The property id and value are arbitrary from the perspective of the Resources service.", 
            "title": "Example: Unsuccessful Subscription"
        }, 
        {
            "location": "/subscriptions-service/#request_3", 
            "text": "POST http://www.example.com/Citrix/Store/resources/v2/subscriptions/Q2l0cm...Q- HTTP/1.1 Authorization: CitrixAuth H4sIA....\nHost: www.example.com\nAccepts: application/vnd.citrix.subscriptionresult+xml,\napplication/vnd.citrix.subscriptionconflict+xml Content-Type: application/vnd.citrix.subscriptionupdate+xml Content-Length: xxxx  ?xml version= 1.0  encoding= utf-8 ?  subscriptionUpdate   xmlns= http://citrix.com/delivery-services/2-0/subscriptions \n        updateType= subscribe \n        updateDataMode= merge   /", 
            "title": "Request"
        }, 
        {
            "location": "/subscriptions-service/#response_3", 
            "text": "HTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.subscriptionconflict+xml Content-Length: xxxx  ?xml version= 1.0  encoding= utf-8 ?  subscriptionConflict   xmlns= http://citrix.com/delivery-services/2-0/subscriptions \n        reason= ConflictingSubscriptionState   \n  data   /  /subscriptionConflict", 
            "title": "Response"
        }, 
        {
            "location": "/citrix-online-integration-feature/", 
            "text": "Citrix-Online Integration Feature (Generic Applications)\n\n\nThe optional Citrix-Online Integration feature, if added to an installation, will add support for 'Generic Applications'. These are resources additonal to, or modified versions of, the resources returned by XenApp, XenDesktop or VDI-in-a-Box. The Generic Applications functionality is driven from configuration.\n\n\nThe Generic Applications configuration appears in the citrix.deliveryservices/genericApplications section of the web.config configuration file in the Store web application. It has the form:\n\n\ngenericApplications\n\n\napplication\n \nname=\nname\n \nclientType=\nclientType\n\n\nsource\n \nenabled=\ntrue|false\n \nresourceId=\nresourceId\n \ntitle=\ntitle\n \nsummary=\nsummary\n \nimageLocation=\nimagePath\n\n      \nkeywords\n/keywords\n\n\nproperties\n/properties\n\n\n/source\n\n\ntransform\n \nenabled=\ntrue|false\n \nmarkerKeyword=\nkeyword\n/\n\n  \n/application\n\n\n/genericApplications\n\n\n\n\n\n\n\n\n\n\n\n\nAttribute\n\n\nValue\n\n\n\n\n\n\n\n\n\n\napplication/@name\n\n\nA name to identify the generic application. Must be unique. Must contain path- friendly characters (e.g. abc_123) as it is used to identify the generic application details using the PowerShell configuration provider.\n\n\n\n\n\n\napplication/@clientType\n\n\nThe client type to be returned for resources of this type.\n\n\n\n\n\n\napplication/source/@enabled\n\n\nIndicates whether a resource for this generic application should be generated for all users.\n\n\n\n\n\n\napplication/source/@resourceId\n\n\nIndicates the id to be used for the resource for this generic application (if enabled is true).\n\n\n\n\n\n\napplication/source/@title\n\n\nIndicates the title to be used for the resource for this generic application (if enabled is true).\n\n\n\n\n\n\napplication/source/@summary\n\n\nIndicates the summary to be used for the resource for this generic application (if enabled is true).\n\n\n\n\n\n\napplication/source/@imageLocation\n\n\nIndicates the icon to be used for the resource for this generic application (if enabled is true). The location can be an absolute path or relative to the web application's folder (e.g. App_Data/resources/g2m.ico)\n\n\n\n\n\n\napplication/transform/@enabled\n\n\nIndicates whether a resource for this generic application should be generated by transforming a specific resource returned by XenApp or XenDesktop.\n\n\n\n\n\n\napplication/transform/@markerKeyword\n\n\nIndicates the keyword that marks a resource as being suitable for transformation. Any resource that contains this keyword (case-sensitive) will be transformed (if enabled is true).\n\n\n\n\n\n\n\n\nSource\n\n\nIf the source enabled attribute is set to true, then for all users, resource enumeration will contain an extra resource of type 'Citrix.MPS.Application' with the specified id, title, summary, client-types, keywords, properties and icon.\n\n\nTransform\n\n\nIf the transform enabled attribute is set to true then, any resource that has the specified marker-keyword, will be replaced with a resource with exactly the same id, type and other data, but with the client-types changed to contain the single, specified client- type.\n\n\nNotes\n:\n\n\n\n\nIt is not recommended to specify enabled=\"true\" for both source and tranform elements for a single application entry, since that can lead to some users having two copies of the same generic application.\n\n\nIf more than one resource contains the specified marker keyword, then it is possible that some users will have more than one copy of the same generic application.", 
            "title": "Citrix-Online Integration Feature (Generic Applications)"
        }, 
        {
            "location": "/citrix-online-integration-feature/#citrix-online-integration-feature-generic-applications", 
            "text": "The optional Citrix-Online Integration feature, if added to an installation, will add support for 'Generic Applications'. These are resources additonal to, or modified versions of, the resources returned by XenApp, XenDesktop or VDI-in-a-Box. The Generic Applications functionality is driven from configuration.  The Generic Applications configuration appears in the citrix.deliveryservices/genericApplications section of the web.config configuration file in the Store web application. It has the form:  genericApplications  application   name= name   clientType= clientType  source   enabled= true|false   resourceId= resourceId   title= title   summary= summary   imageLocation= imagePath \n       keywords /keywords  properties /properties  /source  transform   enabled= true|false   markerKeyword= keyword / \n   /application  /genericApplications      Attribute  Value      application/@name  A name to identify the generic application. Must be unique. Must contain path- friendly characters (e.g. abc_123) as it is used to identify the generic application details using the PowerShell configuration provider.    application/@clientType  The client type to be returned for resources of this type.    application/source/@enabled  Indicates whether a resource for this generic application should be generated for all users.    application/source/@resourceId  Indicates the id to be used for the resource for this generic application (if enabled is true).    application/source/@title  Indicates the title to be used for the resource for this generic application (if enabled is true).    application/source/@summary  Indicates the summary to be used for the resource for this generic application (if enabled is true).    application/source/@imageLocation  Indicates the icon to be used for the resource for this generic application (if enabled is true). The location can be an absolute path or relative to the web application's folder (e.g. App_Data/resources/g2m.ico)    application/transform/@enabled  Indicates whether a resource for this generic application should be generated by transforming a specific resource returned by XenApp or XenDesktop.    application/transform/@markerKeyword  Indicates the keyword that marks a resource as being suitable for transformation. Any resource that contains this keyword (case-sensitive) will be transformed (if enabled is true).", 
            "title": "Citrix-Online Integration Feature (Generic Applications)"
        }, 
        {
            "location": "/citrix-online-integration-feature/#source", 
            "text": "If the source enabled attribute is set to true, then for all users, resource enumeration will contain an extra resource of type 'Citrix.MPS.Application' with the specified id, title, summary, client-types, keywords, properties and icon.", 
            "title": "Source"
        }, 
        {
            "location": "/citrix-online-integration-feature/#transform", 
            "text": "If the transform enabled attribute is set to true then, any resource that has the specified marker-keyword, will be replaced with a resource with exactly the same id, type and other data, but with the client-types changed to contain the single, specified client- type.  Notes :   It is not recommended to specify enabled=\"true\" for both source and tranform elements for a single application entry, since that can lead to some users having two copies of the same generic application.  If more than one resource contains the specified marker keyword, then it is possible that some users will have more than one copy of the same generic application.", 
            "title": "Transform"
        }, 
        {
            "location": "/sessions-service/", 
            "text": "Sessions Service\n\n\nThere are methods available through the NFuse protocol for tracking ICA sessions not connected to by the current client. These may be disconnected or connected to by other clients. Methods are provided to allow the client to:\n\n\n\n\nDisconnect the currently connected session(s) with support for logon tickets.\n\n\nLogOff the currently connected session(s) with support for logon tickets.\n\n\nList any disconnected sessions.\n\n\nList any sessions connected to other clients (although this disconnects those sessions as an unavoidable side-effect!).\n\n\nConnect to a disconnected session.\n\n\n\n\nAs the current behaviour is neither safe nor idempotent, all requests require the use of the POST verb.\n\n\nRequest\n\n\n\n\n\n\n\n\nURL (indicative only)\n\n\nMethod\n\n\nRequest Content-Type\n\n\nResponse Content-Type\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n/sessions/v1/available\n\n\nPOST\n\n\nSession Parameters\n\n\nSession State\n\n\nReturns data on sessions which are available for connection from the client.\nNote that with the exception of XenDesktop 7 (and later) that this has side-effect of disconnecting sessions if 'active' sessions are queried.\n\n\n\n\n\n\n/sessions/v1/disconnect/\n\n\nPOST\n\n\nSession Parameters\n\n\nSession Result\n\n\nDisconnect the requested sessions\n\n\n\n\n\n\n/sessions/v1/logoff/\n\n\nPOST\n\n\nSession Parameters\n\n\nSession Result\n\n\nLogoff the requested sessions\n\n\n\n\n\n\n/sessions/v1/{session-id}/launch/ica\n\n\nPOST\n\n\nLaunch Parameters\n\n\nLaunch Data\n\n\nAttempt to launch the specified session using the ica protocol.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n{session-id}\n\n\nThe identifier of the session.\n\n\n\n\n\n\n\n\nNotes\n:\n\n\n\n\nThese requests require an Authorisation token\n\n\nRequesting \u2018active\u2019 session types will actively disconnect those sessions from other clients as a side-effect while returning the session details. This is a limitation of the underlying XenApp API.\n\n\nThe Launch Parameters are described by the schema: /Schemas/LaunchParams.xsd and the response Launch Data is described by the schema: /Schemas/LaunchData.xsd\n\n\nThe launch URL value is obtained by the client from the results of the available session requests.\n\n\nThe other URLs are obtained via the endpoints service (see Endpoints section below).\n\n\n\n\nRequest Parameters\n\n\nThe following information is required by the requests to the session service. The data is sent as Xml in the body of the POST described by the schema: /Schemas/SessionParameters.xsd\n\n\n\n\n\n\n\n\nParameter\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nclientName\n\n\nYes\n\n\nA string identifying the client. It is the client's responsibility to use a value that will behave appropriately (see notes in Launch section)\n\n\n\n\n\n\ndeviceId\n\n\nNo\n\n\nIdentifies the device, if specified, it overrides the clientName in identifying the end-point.\n\n\n\n\n\n\nincludeActiveSessions\n\n\nNo\n\n\nA boolean specifying whether to include active sessions. \n[true|false]\n\n\n\n\n\n\nappSessionsOnly\n\n\nNo\n\n\nA Boolean specifying whether to only return only application sessions.\nA value of true will list app sessions from any XD7 farm and pre- XD7 XenApp app hosting farm. Pre XD7 XenDesktop hosting farms will not be queried so as not to disconnect active desktops (a side effect of querying sessions).\nWhere a XenApp hosts both apps and desktops the session queries will continue to disconnect a users active desktop.\nFarm exclusion based on version can be overridden to list all farm application sessions by setting the LegacyWorkspaceControl value to on (off is the default) in the Store \n element.\n \n[ true | false ] \n with the default being false.\n\n\n\n\n\n\ntickets\n\n\nNo\n\n\nThis parameter is \nonly used in LogOff and Disconnect session services\n and represents a list of tickets that will be invalidated by the server.\n\n\n\n\n\n\n\n\nNote\n: The presence of the session parameters shall be signaled by setting the Content-Type of the POST to be: \n\napplication/vnd.citrix.sessionparams+xml\n\n\nResponse\n\n\n\n\n\n\n\n\nResponse Code\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200\n\n\nSuccess/Failure\n\n\n\n\n\n\n401\n\n\nBad/Missing security token \n(see CitrixAuth Authentication Scheme document [3])\n\n\n\n\n\n\n404\n\n\nSession identified by {session-id} was not found\n\n\n\n\n\n\n400\n\n\nPOSTed data missing or invalid\n\n\n\n\n\n\n406\n\n\nUnrecognised Accepts Header\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse Format\n\n\nRequest Accept /Response Content-Type Header\n\n\n\n\n\n\n\n\n\n\nSession State\n\n\napplication/vnd.citrix.sessionstate+xml\n\n\n\n\n\n\n\n\nNotes\n:\n\n\n\n\nThe Response to the Request for session information returns Session Data, the schema for which can be found at: /Schemas/SessionState.xsd.\n\n\nThe Response to the Request to disconnect or logoff returns Session Result Data, that describes the success or failure of the entire operation. This data is Xml, described by the schema: /Schemas/SessionResult.xsd.\n\n\n\n\nEndpoints\n\n\n\n\n\n\n\n\nURL (indicative only)\n\n\nId\n\n\nCapabilities\n\n\n\n\n\n\n\n\n\n\n/sessions/v1/available\n\n\nListSessions\n\n\nlistSessions\n\n\n\n\n\n\n/sessions/v1/disconnect\n\n\nDisconnectSessions\n\n\ndisconnectSessions\n\n\n\n\n\n\n/sessions/v1/logoff\n\n\nLogOffSessions\n\n\nlogOffSessions\n\n\n\n\n\n\n\n\nExample: Request Session Information\n\n\nIn this example all sessions are requested by not qualifying the server and client types.\n\n\nRequest\n\n\nPOST http://www.example.com/Store/sessions/v1/available HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.sessionstate+xml\nContent-Type: application/vnd.citrix.sessionparams+xml Content-Length: xxx\nAuthorization: CitrixAuth ...\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nsessionparams\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/sessionparams\n\n\nclientName\nxxxxxxxxx\n/clientName\n \ndeviceId\nxxxxxxxxx\n/deviceId\n \nincludeActiveSessions\ntrue\n/includeActiveSessions\n\n\n/sessionparams\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.sessionstate+xml Content-Length: xxx\nCache-Control: no-cache\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nsessionState\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/sessionstate\n\n             \nenumeration=\nfull\n\n  \nsessions\n\n    \nsession\n \nid=\nzyxw9876\n\n      \nserverType\nwin32\n/serverType\n\n      \nlaunchIca\n\n\nurl\nhttp://www.example.com/Store/session/v1/zyxw9876/launch/ica\n/url\n \n/launchIca\n\n\ninitialapp\nMSPaint\n/initialapp\n \ninitialappresourceaggregated\nfalse\n/initialappresourceaggregated\n \ninitialappresourceid\nXA1.MSPaint\n/initialappresourceid\n \npublishername\nFarm1\n/publishername\n\n    \n/session\n\n    \nsession\n \nid=\n3e4d5f6g\n\n      \nserverType\nwin32\n/serverType\n\n      \nlaunchIca\n\n\nurl\nhttp://www.example.com/Store/session/v1/3e4d5f6g/launch/ica\n/url\n \n/launchIca\n\n\ninitialapp\nNotepad\n/initialapp\n \ninitialappresourceaggregated\nfalse\n/initialappresourceaggregated\n \ninitialappresourceid\nXA1.Notepad\n/initialappresourceid\n \npublishername\nFarm1\n/publishername\n\n    \n/session\n\n  \n/sessions\n\n\n/sessiondata\n\n\n\n\n\n\nExample: Disconnect\n\n\nRequest\n\n\nPOST http://www.example.com/Store/sessions/v1/disconnect HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.sessionresults+xml\nContent-Type: application/vnd.citrix.sessionparams+xml Content-Length: xxx\nAuthorization: CitrixAuth ...\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nsessionparams\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/sessionparams\n\n  \nclientName\nxxxxxxxxx\n/clientName\n\n  \ndeviceId\nxxxxxxxxx\n/deviceId\n\n  \ntickets\n\n\nticket\n85EB92973D2C3804F93A99AAEC232D\n/ticket\n \n/tickets\n\n\n/sessionparams\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.sessionresults+xml Content-Length: xxx\nCache-Control: no-cache\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nsessionResults\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/sessionresult\n \nstatus=\nsuccess\n \n/\n\n\n\n\n\n\nExample: LogOff\n\n\nRequest\n\n\nPOST http://www.example.com/Store/sessions/v1/logoff HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.sessionresults+xml Content-Type: application/vnd.citrix.sessionparams+xml Content-Length: xxx\nAuthorization: CitrixAuth ...\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nsessionparams\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/sessionparams\n\n  \nclientName\nxxxxxxxxx\n/clientName\n\n  \ndeviceId\nxxxxxxxxx\n/deviceId\n\n  \ntickets\n\n    \nticket\n85EB92973D2C3804F93A99AAEC232D\n/ticket\n\n    \nticket\n85EB92973D2C3804F93A99AAEC232A\n/ticket\n\n  \n/tickets\n\n\n/sessionparams\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.sessionresults+xml Content-Length: xxx\nCache-Control: no-cache\n\n\n\n\n\n?xml version=\n1.0\n?\n\n\nsessionResults\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/sessionresult\n \nstatus=\nsuccess\n \n/", 
            "title": "Sessions Service"
        }, 
        {
            "location": "/sessions-service/#sessions-service", 
            "text": "There are methods available through the NFuse protocol for tracking ICA sessions not connected to by the current client. These may be disconnected or connected to by other clients. Methods are provided to allow the client to:   Disconnect the currently connected session(s) with support for logon tickets.  LogOff the currently connected session(s) with support for logon tickets.  List any disconnected sessions.  List any sessions connected to other clients (although this disconnects those sessions as an unavoidable side-effect!).  Connect to a disconnected session.   As the current behaviour is neither safe nor idempotent, all requests require the use of the POST verb.", 
            "title": "Sessions Service"
        }, 
        {
            "location": "/sessions-service/#request", 
            "text": "URL (indicative only)  Method  Request Content-Type  Response Content-Type  Description      /sessions/v1/available  POST  Session Parameters  Session State  Returns data on sessions which are available for connection from the client. Note that with the exception of XenDesktop 7 (and later) that this has side-effect of disconnecting sessions if 'active' sessions are queried.    /sessions/v1/disconnect/  POST  Session Parameters  Session Result  Disconnect the requested sessions    /sessions/v1/logoff/  POST  Session Parameters  Session Result  Logoff the requested sessions    /sessions/v1/{session-id}/launch/ica  POST  Launch Parameters  Launch Data  Attempt to launch the specified session using the ica protocol.        Parameter  Description      {session-id}  The identifier of the session.     Notes :   These requests require an Authorisation token  Requesting \u2018active\u2019 session types will actively disconnect those sessions from other clients as a side-effect while returning the session details. This is a limitation of the underlying XenApp API.  The Launch Parameters are described by the schema: /Schemas/LaunchParams.xsd and the response Launch Data is described by the schema: /Schemas/LaunchData.xsd  The launch URL value is obtained by the client from the results of the available session requests.  The other URLs are obtained via the endpoints service (see Endpoints section below).", 
            "title": "Request"
        }, 
        {
            "location": "/sessions-service/#request-parameters", 
            "text": "The following information is required by the requests to the session service. The data is sent as Xml in the body of the POST described by the schema: /Schemas/SessionParameters.xsd     Parameter  Required  Description      clientName  Yes  A string identifying the client. It is the client's responsibility to use a value that will behave appropriately (see notes in Launch section)    deviceId  No  Identifies the device, if specified, it overrides the clientName in identifying the end-point.    includeActiveSessions  No  A boolean specifying whether to include active sessions.  [true|false]    appSessionsOnly  No  A Boolean specifying whether to only return only application sessions. A value of true will list app sessions from any XD7 farm and pre- XD7 XenApp app hosting farm. Pre XD7 XenDesktop hosting farms will not be queried so as not to disconnect active desktops (a side effect of querying sessions). Where a XenApp hosts both apps and desktops the session queries will continue to disconnect a users active desktop. Farm exclusion based on version can be overridden to list all farm application sessions by setting the LegacyWorkspaceControl value to on (off is the default) in the Store   element.   [ true | false ]   with the default being false.    tickets  No  This parameter is  only used in LogOff and Disconnect session services  and represents a list of tickets that will be invalidated by the server.     Note : The presence of the session parameters shall be signaled by setting the Content-Type of the POST to be:  application/vnd.citrix.sessionparams+xml", 
            "title": "Request Parameters"
        }, 
        {
            "location": "/sessions-service/#response", 
            "text": "Response Code  Description      200  Success/Failure    401  Bad/Missing security token  (see CitrixAuth Authentication Scheme document [3])    404  Session identified by {session-id} was not found    400  POSTed data missing or invalid    406  Unrecognised Accepts Header        Response Format  Request Accept /Response Content-Type Header      Session State  application/vnd.citrix.sessionstate+xml     Notes :   The Response to the Request for session information returns Session Data, the schema for which can be found at: /Schemas/SessionState.xsd.  The Response to the Request to disconnect or logoff returns Session Result Data, that describes the success or failure of the entire operation. This data is Xml, described by the schema: /Schemas/SessionResult.xsd.", 
            "title": "Response"
        }, 
        {
            "location": "/sessions-service/#endpoints", 
            "text": "URL (indicative only)  Id  Capabilities      /sessions/v1/available  ListSessions  listSessions    /sessions/v1/disconnect  DisconnectSessions  disconnectSessions    /sessions/v1/logoff  LogOffSessions  logOffSessions", 
            "title": "Endpoints"
        }, 
        {
            "location": "/sessions-service/#example-request-session-information", 
            "text": "In this example all sessions are requested by not qualifying the server and client types.", 
            "title": "Example: Request Session Information"
        }, 
        {
            "location": "/sessions-service/#request_1", 
            "text": "POST http://www.example.com/Store/sessions/v1/available HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.sessionstate+xml\nContent-Type: application/vnd.citrix.sessionparams+xml Content-Length: xxx\nAuthorization: CitrixAuth ...  ?xml version= 1.0 ?  sessionparams   xmlns= http://citrix.com/delivery-services/1-0/sessionparams  clientName xxxxxxxxx /clientName   deviceId xxxxxxxxx /deviceId   includeActiveSessions true /includeActiveSessions  /sessionparams", 
            "title": "Request"
        }, 
        {
            "location": "/sessions-service/#response_1", 
            "text": "HTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.sessionstate+xml Content-Length: xxx\nCache-Control: no-cache  ?xml version= 1.0 ?  sessionState   xmlns= http://citrix.com/delivery-services/1-0/sessionstate \n              enumeration= full \n   sessions \n     session   id= zyxw9876 \n       serverType win32 /serverType \n       launchIca  url http://www.example.com/Store/session/v1/zyxw9876/launch/ica /url   /launchIca  initialapp MSPaint /initialapp   initialappresourceaggregated false /initialappresourceaggregated   initialappresourceid XA1.MSPaint /initialappresourceid   publishername Farm1 /publishername \n     /session \n     session   id= 3e4d5f6g \n       serverType win32 /serverType \n       launchIca  url http://www.example.com/Store/session/v1/3e4d5f6g/launch/ica /url   /launchIca  initialapp Notepad /initialapp   initialappresourceaggregated false /initialappresourceaggregated   initialappresourceid XA1.Notepad /initialappresourceid   publishername Farm1 /publishername \n     /session \n   /sessions  /sessiondata", 
            "title": "Response"
        }, 
        {
            "location": "/sessions-service/#example-disconnect", 
            "text": "", 
            "title": "Example: Disconnect"
        }, 
        {
            "location": "/sessions-service/#request_2", 
            "text": "POST http://www.example.com/Store/sessions/v1/disconnect HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.sessionresults+xml\nContent-Type: application/vnd.citrix.sessionparams+xml Content-Length: xxx\nAuthorization: CitrixAuth ...  ?xml version= 1.0 ?  sessionparams   xmlns= http://citrix.com/delivery-services/1-0/sessionparams \n   clientName xxxxxxxxx /clientName \n   deviceId xxxxxxxxx /deviceId \n   tickets  ticket 85EB92973D2C3804F93A99AAEC232D /ticket   /tickets  /sessionparams", 
            "title": "Request"
        }, 
        {
            "location": "/sessions-service/#response_2", 
            "text": "HTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.sessionresults+xml Content-Length: xxx\nCache-Control: no-cache  ?xml version= 1.0 ?  sessionResults   xmlns= http://citrix.com/delivery-services/1-0/sessionresult   status= success   /", 
            "title": "Response"
        }, 
        {
            "location": "/sessions-service/#example-logoff", 
            "text": "", 
            "title": "Example: LogOff"
        }, 
        {
            "location": "/sessions-service/#request_3", 
            "text": "POST http://www.example.com/Store/sessions/v1/logoff HTTP/1.1 Host: www.example.com\nAccept: application/vnd.citrix.sessionresults+xml Content-Type: application/vnd.citrix.sessionparams+xml Content-Length: xxx\nAuthorization: CitrixAuth ...  ?xml version= 1.0 ?  sessionparams   xmlns= http://citrix.com/delivery-services/1-0/sessionparams \n   clientName xxxxxxxxx /clientName \n   deviceId xxxxxxxxx /deviceId \n   tickets \n     ticket 85EB92973D2C3804F93A99AAEC232D /ticket \n     ticket 85EB92973D2C3804F93A99AAEC232A /ticket \n   /tickets  /sessionparams", 
            "title": "Request"
        }, 
        {
            "location": "/sessions-service/#response_3", 
            "text": "HTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.sessionresults+xml Content-Length: xxx\nCache-Control: no-cache  ?xml version= 1.0 ?  sessionResults   xmlns= http://citrix.com/delivery-services/1-0/sessionresult   status= success   /", 
            "title": "Response"
        }, 
        {
            "location": "/assign-desktop-service/", 
            "text": "Assign Desktop Service\n\n\nThis service allows a desktop to be assigned to a particular user (the user is identified by the security token in the request.\n\n\nRequest\n\n\nThis service allows a desktop to be assigned to a particular user (the user is identified by the security token in the request.\n\n\n\n\n\n\n\n\nURL (indicative only) and Content-Type\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n/resources/v2/{resourceId}/assigndesktop Application/vnd.citrix.assigndesktop+xml\n\n\nPOST\n\n\nAssigns the desktop indicated by the resourceId.\n\n\n\n\n\n\n\n\nNotes\n:\n\n\n\n\nThe URLs given above are for illustrative purposes only. The actual URL used in a request should be obtained from the\nresults of an enumeration request (eg /resources/v2/ or /resources/v2/{id}).\n\nRequest data\n\n\nThe POSTed requests are Xml, described by the schema: /Schemas/AssignDesktopParams.xsd, with top level element assigndesktopparams.\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nResponse Code (and friendly name)\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200 (OK)\n\n\nThe desktop assignment operation has been attempted and the response xml document (Content-Type: application/vnd.citrix.assigndekstop+xml) indicates whether the operation succeeded.\nThe response xml document is described by the schema /Schemas/AssignDesktop.xsd.\n\n\n\n\n\n\n404 (Not Found)\n\n\nThe specified resource does not support the assign operation.\n\n\n\n\n\n\n\n\nResponse Error Codes\n\n\nThe following error codes can be returned for errors in assigning a desktop:\n\n\n\n\n\n\n\n\nError Code\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nno-available-workstation\n\n\nNo VDAs are available to process this request.\n\n\n\n\n\n\nconnection-refused\n\n\nThe server refused a connection.\n\n\n\n\n\n\nresource-unavailable\n\n\nThe desktop is no longer available to the user.\n\n\n\n\n\n\nunspecified\n\n\nUnspecified error.\n\n\n\n\n\n\n\n\nExample: Assign Desktop Success\n\n\nRequest\n\n\nPOST http://www.example.com/Citrix/Store/resources/v2/Q2l0cm...Q-/assigndesktop HTTP/1.1 Authorization: CitrixAuth H4sIA....\nHost: www.example.com\nAccepts: application/vnd.citrix.assigndesktop+xml,\nContent-Type: application/vnd.citrix.assigndesktopparams+xml Content-Length: xxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nassigndesktopparams\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/assigndesktopparams\n\n  \nclientName\nclientname\n/clientName\n\n\nclientAddress\n10.70.0.123\n/clientAddress\n \n/subscriptionUpdate\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.assigndesktop+xml\nDate: Wed, 16 Feb 2011 17:31:43 GMT\nContent-Length: xxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nassigndesktop\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/assigndesktop\n \nstatus=\n\u201dsuccess\u201d\n\n \nnetbiosname\ndesktop1\n/netbiosname\n\n\n/assigndesktop\n\n\n\n\n\n\nExample: Assign Desktop Failure\n\n\nRequest\n\n\nPOST http://www.example.com/Citrix/Store/resources/v2/Q2l0cm...Q-/assigndesktop HTTP/1.1 Authorization: CitrixAuth H4sIA....\nHost: www.example.com\nAccepts: application/vnd.citrix.assigndesktop+xml,\nContent-Type: application/vnd.citrix.assigndesktopparams+xml Content-Length: xxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nassigndesktopparams\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/assigndesktopparams\n\n  \nclientName\nclientname\n/clientName\n\n\nclientAddress\n10.70.0.123\n/clientAddress\n \n/subscriptionUpdate\n\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.assigndesktop+xml\nDate: Wed, 16 Feb 2011 17:31:43 GMT\nContent-Length: xxxx\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nassigndesktop\n \nxmlns=\nhttp://citrix.com/delivery-services/1-0/assigndesktop\n \nstatus=\n\u201dfailure\u201d\n\n \nerrorid\nno-available-workstation\n/errorid", 
            "title": "Assign Desktop Service"
        }, 
        {
            "location": "/assign-desktop-service/#assign-desktop-service", 
            "text": "This service allows a desktop to be assigned to a particular user (the user is identified by the security token in the request.", 
            "title": "Assign Desktop Service"
        }, 
        {
            "location": "/assign-desktop-service/#request", 
            "text": "This service allows a desktop to be assigned to a particular user (the user is identified by the security token in the request.     URL (indicative only) and Content-Type  Method  Description      /resources/v2/{resourceId}/assigndesktop Application/vnd.citrix.assigndesktop+xml  POST  Assigns the desktop indicated by the resourceId.     Notes :   The URLs given above are for illustrative purposes only. The actual URL used in a request should be obtained from the\nresults of an enumeration request (eg /resources/v2/ or /resources/v2/{id}). Request data  The POSTed requests are Xml, described by the schema: /Schemas/AssignDesktopParams.xsd, with top level element assigndesktopparams.", 
            "title": "Request"
        }, 
        {
            "location": "/assign-desktop-service/#response", 
            "text": "Response Code (and friendly name)  Description      200 (OK)  The desktop assignment operation has been attempted and the response xml document (Content-Type: application/vnd.citrix.assigndekstop+xml) indicates whether the operation succeeded. The response xml document is described by the schema /Schemas/AssignDesktop.xsd.    404 (Not Found)  The specified resource does not support the assign operation.", 
            "title": "Response"
        }, 
        {
            "location": "/assign-desktop-service/#response-error-codes", 
            "text": "The following error codes can be returned for errors in assigning a desktop:     Error Code  Description      no-available-workstation  No VDAs are available to process this request.    connection-refused  The server refused a connection.    resource-unavailable  The desktop is no longer available to the user.    unspecified  Unspecified error.", 
            "title": "Response Error Codes"
        }, 
        {
            "location": "/assign-desktop-service/#example-assign-desktop-success", 
            "text": "", 
            "title": "Example: Assign Desktop Success"
        }, 
        {
            "location": "/assign-desktop-service/#request_1", 
            "text": "POST http://www.example.com/Citrix/Store/resources/v2/Q2l0cm...Q-/assigndesktop HTTP/1.1 Authorization: CitrixAuth H4sIA....\nHost: www.example.com\nAccepts: application/vnd.citrix.assigndesktop+xml,\nContent-Type: application/vnd.citrix.assigndesktopparams+xml Content-Length: xxxx  ?xml version= 1.0  encoding= utf-8 ?  assigndesktopparams   xmlns= http://citrix.com/delivery-services/1-0/assigndesktopparams \n   clientName clientname /clientName  clientAddress 10.70.0.123 /clientAddress   /subscriptionUpdate", 
            "title": "Request"
        }, 
        {
            "location": "/assign-desktop-service/#response_1", 
            "text": "HTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.assigndesktop+xml\nDate: Wed, 16 Feb 2011 17:31:43 GMT\nContent-Length: xxxx  ?xml version= 1.0  encoding= utf-8 ?  assigndesktop   xmlns= http://citrix.com/delivery-services/1-0/assigndesktop   status= \u201dsuccess\u201d \n  netbiosname desktop1 /netbiosname  /assigndesktop", 
            "title": "Response"
        }, 
        {
            "location": "/assign-desktop-service/#example-assign-desktop-failure", 
            "text": "", 
            "title": "Example: Assign Desktop Failure"
        }, 
        {
            "location": "/assign-desktop-service/#request_2", 
            "text": "POST http://www.example.com/Citrix/Store/resources/v2/Q2l0cm...Q-/assigndesktop HTTP/1.1 Authorization: CitrixAuth H4sIA....\nHost: www.example.com\nAccepts: application/vnd.citrix.assigndesktop+xml,\nContent-Type: application/vnd.citrix.assigndesktopparams+xml Content-Length: xxxx  ?xml version= 1.0  encoding= utf-8 ?  assigndesktopparams   xmlns= http://citrix.com/delivery-services/1-0/assigndesktopparams \n   clientName clientname /clientName  clientAddress 10.70.0.123 /clientAddress   /subscriptionUpdate", 
            "title": "Request"
        }, 
        {
            "location": "/assign-desktop-service/#response_2", 
            "text": "HTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.assigndesktop+xml\nDate: Wed, 16 Feb 2011 17:31:43 GMT\nContent-Length: xxxx  ?xml version= 1.0  encoding= utf-8 ?  assigndesktop   xmlns= http://citrix.com/delivery-services/1-0/assigndesktop   status= \u201dfailure\u201d \n  errorid no-available-workstation /errorid", 
            "title": "Response"
        }, 
        {
            "location": "/endpoints-service/", 
            "text": "Endpoints Service\n\n\nThis service returns a list of all the endpoints available with their associated metadata. An endpoint is essentially the URL of a service that the client can use to start a communication with the server. The endpoint service itself is considered an endpoint and it is included in the response.\n\n\nNote\n: The endpoints service is not limited to the Store service (it is shared with, for example, the authentication service), but is defined here.\n\n\nRequest\n\n\n\n\n\n\n\n\nURL\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n/endpoints/v1/\n\n\nGET\n\n\nReturns the list of all the endpoints available.\n\n\n\n\n\n\n\n\nNotes\n:\n\n\n\n\nThe request does not require an Authorisation token.\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nResponse Code\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200\n\n\nSuccess\n\n\n\n\n\n\n\n\nSuccess Response Content\n\n\nIn the case that a successful reponse is returned, the response body contains an Xml document giving the list of endpoints available. Each endpoint has the following data:\n\n\n\n\nid : Uniquely identifies the endpoint.\n\n\nurl: The absolute URL of the endpoint.\n\n\ncapabilities: A list of strings identifying the capabilities supported by the endpoint.\n\n\n\n\n\n\n\n\n\n\nResponse Format\n\n\nRequest Accept /Response Content-Type Header\n\n\n\n\n\n\n\n\n\n\nXml\n\n\napplication/vnd.citrix.endpoints+xml\n\n\n\n\n\n\n\n\nThe result content is Xml described by the schema: /Schemas/Endpoints.xsd.\n\n\nExample: Successful Endpoints Enumeration\n\n\nRequest\n\n\nGET http://www.example.com/endpoints/v1/ HTTP/1.1\nHost: www.example.com\nAccept: application/vnd.citrix.endpoints+xml\nAuthorization: CitrixAuth security-token\n\n\n\n\n\nResponse\n\n\nHTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.endpoints+xml\nContent-Length: xxx\nCache-Control: xxx\n\n\n\n\n\nendpoints\n \nxmlns=\nhttp://citrix.com/dazzleservices/2-0/endpoints\n \nendpoint\n \nid=\nEndpoints\n\n\nurl\nhttp://www.example.com/Data/endpoints/v1\n/url\n \ncapabilities\n\n      \ncapability\nendpoints\n/capability\n\n    \n/capabilities\n\n  \n/endpoint\n\n  \nendpoint\n \nid=\nListResourcesWithAutoProvision\n\n\nurl\nhttp://www.example.com/Data/resources/v2\n/url\n \ncapabilities\n\n\ncapability\nResourcesEnumerationV2\n/capability\n \ncapability\nAutoProvision\n/capability\n \ncapability\ngroup:core\n/capability\n\n  ...\n    \n/capabilities\n\n\n/endpoint\n\n  ...\n\n/endpoints", 
            "title": "Endpoints Service"
        }, 
        {
            "location": "/endpoints-service/#endpoints-service", 
            "text": "This service returns a list of all the endpoints available with their associated metadata. An endpoint is essentially the URL of a service that the client can use to start a communication with the server. The endpoint service itself is considered an endpoint and it is included in the response.  Note : The endpoints service is not limited to the Store service (it is shared with, for example, the authentication service), but is defined here.", 
            "title": "Endpoints Service"
        }, 
        {
            "location": "/endpoints-service/#request", 
            "text": "URL  Method  Description      /endpoints/v1/  GET  Returns the list of all the endpoints available.     Notes :   The request does not require an Authorisation token.", 
            "title": "Request"
        }, 
        {
            "location": "/endpoints-service/#response", 
            "text": "Response Code  Description      200  Success", 
            "title": "Response"
        }, 
        {
            "location": "/endpoints-service/#success-response-content", 
            "text": "In the case that a successful reponse is returned, the response body contains an Xml document giving the list of endpoints available. Each endpoint has the following data:   id : Uniquely identifies the endpoint.  url: The absolute URL of the endpoint.  capabilities: A list of strings identifying the capabilities supported by the endpoint.      Response Format  Request Accept /Response Content-Type Header      Xml  application/vnd.citrix.endpoints+xml     The result content is Xml described by the schema: /Schemas/Endpoints.xsd.", 
            "title": "Success Response Content"
        }, 
        {
            "location": "/endpoints-service/#example-successful-endpoints-enumeration", 
            "text": "", 
            "title": "Example: Successful Endpoints Enumeration"
        }, 
        {
            "location": "/endpoints-service/#request_1", 
            "text": "GET http://www.example.com/endpoints/v1/ HTTP/1.1\nHost: www.example.com\nAccept: application/vnd.citrix.endpoints+xml\nAuthorization: CitrixAuth security-token", 
            "title": "Request"
        }, 
        {
            "location": "/endpoints-service/#response_1", 
            "text": "HTTP/1.1 200 OK\nContent-Type: application/vnd.citrix.endpoints+xml\nContent-Length: xxx\nCache-Control: xxx  endpoints   xmlns= http://citrix.com/dazzleservices/2-0/endpoints   endpoint   id= Endpoints  url http://www.example.com/Data/endpoints/v1 /url   capabilities \n       capability endpoints /capability \n     /capabilities \n   /endpoint \n   endpoint   id= ListResourcesWithAutoProvision  url http://www.example.com/Data/resources/v2 /url   capabilities  capability ResourcesEnumerationV2 /capability   capability AutoProvision /capability   capability group:core /capability \n  ...\n     /capabilities  /endpoint \n  ... /endpoints", 
            "title": "Response"
        }, 
        {
            "location": "/discovery-service/", 
            "text": "Discovery Service\n\n\nThis service is part of a particular Store. It returns a document describing the location of the endpoint services of the Store and associated authentication service plus information on the beacons and gateways that the client can use to access these services from internal or external networks (i.e. using a gateway or not as appropriate).\n\n\nRequest\n\n\n\n\n\n\n\n\nURL\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n/discovery\n\n\nGET\n\n\nReturns the discovery document for the store.\n\n\n\n\n\n\n\n\nNotes\n:\n\n\n\n\nThis request does not require an Authorisation token.\n\n\nThe URL for this service is fixed relative to the Store location (e.g. if the Store is at location https://server/Citrix/Store then the discovery document can be requested from URL https://server/Citrix/Store/discovery.\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nResponse Code\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200\n\n\nSuccess\n\n\n\n\n\n\n\n\nSuccess Response Content\n\n\nThe result content is Xml, described by the schema: /Schemas/Discovery.xsd with top-level element Discovery.\n\n\n\n\n\n\n\n\nResponse Format\n\n\nRequest Accept /Response Content-Type Header\n\n\n\n\n\n\n\n\n\n\nXml\n\n\napplication/vnd.citrix.discovery+xml \napplication/vnd.citrix.receiver.configure (deprecated, see notes)\n\n\n\n\n\n\n\n\nNote\n: For backwards compatibility with earlier versions of this service, the response format will be reported as application/vnd.citrix.receiver.configure unless application/vnd.citrix.discovery+xml is explicitly requested by the client via the Accepts header (provided application/citrix.receiver.configure is not also explicitly requested). Also no 406 response will be returned even if the Accepts header is not compatible with the returned content type. \nUse of the application/vnd.citrix.receiver.configure content-type is deprecated and support for it may be dropped in future releases.\n\n\nEndpoints\n\n\n\n\n\n\n\n\nURL\n\n\nId\n\n\nCapabilities\n\n\n\n\n\n\n\n\n\n\n/discovery\n\n\nDiscoveryDocument\n\n\nDiscoveryV1", 
            "title": "Discovery Service"
        }, 
        {
            "location": "/discovery-service/#discovery-service", 
            "text": "This service is part of a particular Store. It returns a document describing the location of the endpoint services of the Store and associated authentication service plus information on the beacons and gateways that the client can use to access these services from internal or external networks (i.e. using a gateway or not as appropriate).", 
            "title": "Discovery Service"
        }, 
        {
            "location": "/discovery-service/#request", 
            "text": "URL  Method  Description      /discovery  GET  Returns the discovery document for the store.     Notes :   This request does not require an Authorisation token.  The URL for this service is fixed relative to the Store location (e.g. if the Store is at location https://server/Citrix/Store then the discovery document can be requested from URL https://server/Citrix/Store/discovery.", 
            "title": "Request"
        }, 
        {
            "location": "/discovery-service/#response", 
            "text": "Response Code  Description      200  Success", 
            "title": "Response"
        }, 
        {
            "location": "/discovery-service/#success-response-content", 
            "text": "The result content is Xml, described by the schema: /Schemas/Discovery.xsd with top-level element Discovery.     Response Format  Request Accept /Response Content-Type Header      Xml  application/vnd.citrix.discovery+xml  application/vnd.citrix.receiver.configure (deprecated, see notes)     Note : For backwards compatibility with earlier versions of this service, the response format will be reported as application/vnd.citrix.receiver.configure unless application/vnd.citrix.discovery+xml is explicitly requested by the client via the Accepts header (provided application/citrix.receiver.configure is not also explicitly requested). Also no 406 response will be returned even if the Accepts header is not compatible with the returned content type.  Use of the application/vnd.citrix.receiver.configure content-type is deprecated and support for it may be dropped in future releases.", 
            "title": "Success Response Content"
        }, 
        {
            "location": "/discovery-service/#endpoints", 
            "text": "URL  Id  Capabilities      /discovery  DiscoveryDocument  DiscoveryV1", 
            "title": "Endpoints"
        }, 
        {
            "location": "/accounts-service/", 
            "text": "Accounts Service\n\n\nThis service is not specific to a particular store, but spans all stores in an installation. Whereas each store has a base url of http(s)://\n/Citrix/\n/ (where \n is the single server or cluster hostname for the installation, and \n the name of the store), the accounts service has the base url http(s)://\n/Citrix/Roaming/\n\n\nRequest\n\n\n\n\n\n\n\n\nURL\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n/Citrix/Roaming/accounts\n\n\nGET/POST\n\n\nReturns the list of available accounts with full details.\n\n\n\n\n\n\n/Citrix/Roaming/accounts?summary\n\n\nGET/POST\n\n\nReturns the list of available accounts, as summaries, i.e. no details.\n\n\n\n\n\n\n\n\nNote\n: These requests may require an Authorisation token depending on the Stores configuration. Authorisation is only required if all Stores require authentication and share the same authentication service and authentication protocols. Future releases may remove authentication entirely from this service.\n\n\nResponse\n\n\n\n\n\n\n\n\nResponse Code\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n200\n\n\nSuccess\n\n\n\n\n\n\n\n\nSuccess Response Content\n\n\nIn the case that a successful reponse is returned, the response body contains an Xml document giving the list of accounts available, described by the schema: /Schemas/Accounts.xsd\n\n\nNotes\n:\n\n\n\n\nFor the StoreFront Services 1.2 release, a few simplifications apply:\n\n\nNo trust settings or properties are defined.\n\n\nPlug-ins are only defined at the account level.\n\n\n\n\n\n\n\n\nContent Hash\n\n\nThe \n element contains a hash of the account content that can be used by the client to determine whether the content has changed. This can be used in conjunction with the summary parameter to optimize network bandwidth usage. The algorithm used to generate the hash may be changed in later revisions, so the client should not treat the contentHash as anything other than an opaque string or make assumptions about the length or format.\n\n\nPublished\n\n\nIndicates whether the account is published. Published accounts are presented to the user by preference over unpublished accounts.\n\n\nNote\n: The xs:boolean type allows \u2018true\u2019/\u2019false\u2019 or, equivalently, \u20181\u2019/\u20190\u2019 values to be used so clients should parse both correctly.\n\n\nMetaData\n\n\nFrom the Accounts Xml format, metadata (plug-ins, trust settings and properties) can be specified at the account or individual service level. Metadata specified at the account level should be assumed to apply to all services in the account, individual services may choose to add extra metadata or override the account-level values.\n\n\nPlug-ins\n\n\nThe plug-in values which may be returned by the account service are as follows:\n\n\n\n\n\n\n\n\nPlug-in value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nA9852000-047D-11DD-95FF-0800200C9A66\n\n\nReceiver (Online)\n\n\n\n\n\n\n2C882560-4469-4E65-9EBE-4A842840F273\n\n\nOffline Plug-in\n\n\n\n\n\n\nb9852000-041d-11ff-25ff-0800400c9a66\n\n\nVPN\n\n\n\n\n\n\n73cf72ab-2528-4836-8b69-062a92da02bb\n\n\nShareFile Outlook Plug-in\n\n\n\n\n\n\n18952f2a-6e32-4606-9cc2-48dab425ba36\n\n\nShareFile Desktop Widget\n\n\n\n\n\n\nDF0F00A4-BB7E-4af5-915F-F0A674B2264A\n\n\nHDX RealTime Media Engine (aka \u2018Lync Accelerator\u2019) from Acosta.\n\n\n\n\n\n\n4122F203-D87B-4e9c-BE7A-222E4E8A9C6F\n\n\nAcceleration Plug-in (not returned by StoreFront Services 1.2)\n\n\n\n\n\n\n\n\nNote\n: These are equivalent values to those used by Merchandising Server\n\n\nTrust Settings\n\n\nThese specify the trust settings for various aspects of the client. Values can be Yes, No or Ask, indicating whether settings should be enabled, disabled or whether the user should be prompted to choose.\n\n\nProperties\n\n\nThese allow arbitrary data to be associated with a service and are intended as an extension mechanism.\n\n\n\n\n\n\n\n\nResponse Format\n\n\nRequest Accept /Response Content-Type Header\n\n\n\n\n\n\n\n\n\n\nXml\n\n\napplication/vnd.citrix.roamingaccounts+xml\n\n\n\n\n\n\n\n\nAccount Service Example\n\n\nThis is an example of a client discovering the latest account information for a user. It assumes that the client has already authenticated and has a suitable authorization token, so the authentication exchange is not shown. This example illustrates the use of contentHash and the summary request. This does not imply that using the summary request is necessarily the best way to query account information as the cost of two network round-trips may outweigh the saved bandwidth for occasions where the second request is saved because the account data has not changed.\n\n\nExample: Request Summary Account Data\n\n\nIn this example, the client requests summary account data to find out if any of the accounts have changed, been added or removed since the client last retrieved account data, which it has cached, including the contentHash values:\n\n\nRequest\n\n\nGET https://storefront01/Citrix/Roaming/accounts/?summary HTTP/1.1 Accept: application/vnd.citrix.roamingaccounts+xml\nAuthorization: CitrixAuth H4sIAA........\nHost: storefront01\n\n\n\n\n\nResponse\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.roamingaccounts+xml Content-Length: xxxxx\n\n?xml version=\u201d1.0\u201d encoding=\u201dutf-8\u201d\n\n\naccounts\n \nxmlns=\nhttp://citrix.com/delivery-services/2-1/accounts\n\n\nxmlns:sr=\nhttp://www.citrix.com/ServiceRecord\n \naccount\n\n\nid\n 775552B2-3E81-4FDA-93D1-CE0374E902AD\n/id\n \nname\nStore\n/name\n\n\ndescription\n/description\n \npublished\ntrue\n/published\n \ncontentHash\nAAA34596786767...345DEF\n/contentHash\n\n  \n/account\n\n  \naccount\n\n\nid\n1234DEF-1111-4FDA-5555-1234567890\n/id\n \nname\nStore2\n/name\n\n\ndescription\n/description\n \npublished\nfalse\n/published\n \ncontentHash\nBBB3373737377...123CCC\n/contentHash\n\n\n/account\n\n\n/accounts\n\n\n\n\n\n\nThe data has changed so the client requests the full data:\n\n\nRequest\n\n\nGET https://storefront01/Citrix/Roaming/accounts/ HTTP/1.1\nAccept: */*\nAuthorization: CitrixAuth H4sIAA........\nHost: storefront01\nResponse\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.roamingaccounts+xml Content-Length: xxxxx\n\n\n\n\n\n?xml version=\u201d1.0\u201d encoding=\u201dutf-8\u201d\n\n\naccounts\n \nxmlns=\nhttp://citrix.com/delivery-services/2-1/accounts\n\n\nxmlns:sr=\nhttp://www.citrix.com/ServiceRecord\n \naccount\n\n\nid\n 775552B2-3E81-4FDA-93D1-CE0374E902AD\n/id\n \nname\nStore\n/name\n\n\ndescription\n/description\n \npublished\ntrue\n/published\n \ncontentHash\nAAA34596786767...345DEF\n/contentHash\n \ndetails\n\n      \nupdaterType\ncitrix\n/updaterType\n\n      \nannotatedServices\n\n       \n!-- Store service --\n\n       \nannotatedService\n\n         \nsr:Service\n \ntype=\n\u201dStore\u201d\n\n\nsr:SRID\n1231231232312312\n/sr:SRID\n\n\nsr:Name\nStore\n/sr:Name\n \nsr:Address\nhttps://storefront01/Citrix/Store/discovery\n/sr:Address\n \nsr:Gateways\n\n             \nsr:Gateway\n \n...\n...\n/sr:Gateway\n\n           \n/sr:Gateways\n\n           \nsr:Beacons\n\n\nsr:Internal\n \nsr:Beacon\nhttps://storefront01/Citrix/Store/discovery\n/sr:Beacon\n\n             \n/sr:Internal\n\n             \nsr:External\n\n\nsr:Beacon\nhttp://www.example.com\n/sr:Beacon\n\n\nsr:Beacon\nhttp://www.microsoft.com\n/sr:Beacon\n \n/sr:External\n\n           \n/sr:Beacons\n\n         \n/sr:Service\n\n         \nmetadata\n\n           \nplugins/\n\n           \ntrustSettings/\n\n           \nproperties/\n\n         \n/metadata\n\n       \n/annotatedService\n\n       \n!-- VPN service has gateways but no beacons or address --\n\n       \nannotatedService\n\n\nsr:Service\n \ntype=\n\u201dVPN\u201d\n \nsr:SRID\n454545454545454545454\n/sr:SRID\n \nsr:Name\nVPN\n/sr:Name\n \nsr:Address\n/sr:Address\n\n           \nsr:Gateways\n\n             \nsr:Gateway\n \n...\n...\n/sr:Gateway\n\n           \n/sr:Gateways\n\n           \nsr:Beacons/\n\n         \n/sr:Service\n\n         \nmetadata\n\n           \nplugins/\n\n           \ntrustSettings/\n\n           \nproperties/\n\n         \n/metadata\n\n       \n/annotatedService\n\n      \n/annotatedServices\n\n      \nmetadata\n\n\nplugins\n\n          \n!-- offline \n vpn plugins --\n\n          \nplugin\nA9852000-047D-11DD-95FF-0800200C9A66\n/plugin\n\n\nplugin\nb9852000-041d-11ff-25ff-0800400c9a66\n/plugin\n \n/plugins\n\n\ntrustSettings/\n\n\nproperties/\n\n      \n/metadata\n\n    \n/details\n\n  \n/account\n\n  \naccount\n\n\nid\n1234DEF-1111-4FDA-5555-1234567890\n/id\n \nname\nStore2\n/name\n\n\ndescription\n/description\n \npublished\nfalse\n/published\n \ncontentHash\nBBB3373737377...123CCC\n/contentHash\n \ndetails\n\n       ...\n    \n/details\n\n  \n/account\n\n\n/accounts", 
            "title": "Accounts Service"
        }, 
        {
            "location": "/accounts-service/#accounts-service", 
            "text": "This service is not specific to a particular store, but spans all stores in an installation. Whereas each store has a base url of http(s):// /Citrix/ / (where   is the single server or cluster hostname for the installation, and   the name of the store), the accounts service has the base url http(s):// /Citrix/Roaming/", 
            "title": "Accounts Service"
        }, 
        {
            "location": "/accounts-service/#request", 
            "text": "URL  Method  Description      /Citrix/Roaming/accounts  GET/POST  Returns the list of available accounts with full details.    /Citrix/Roaming/accounts?summary  GET/POST  Returns the list of available accounts, as summaries, i.e. no details.     Note : These requests may require an Authorisation token depending on the Stores configuration. Authorisation is only required if all Stores require authentication and share the same authentication service and authentication protocols. Future releases may remove authentication entirely from this service.", 
            "title": "Request"
        }, 
        {
            "location": "/accounts-service/#response", 
            "text": "Response Code  Description      200  Success", 
            "title": "Response"
        }, 
        {
            "location": "/accounts-service/#success-response-content", 
            "text": "In the case that a successful reponse is returned, the response body contains an Xml document giving the list of accounts available, described by the schema: /Schemas/Accounts.xsd  Notes :   For the StoreFront Services 1.2 release, a few simplifications apply:  No trust settings or properties are defined.  Plug-ins are only defined at the account level.", 
            "title": "Success Response Content"
        }, 
        {
            "location": "/accounts-service/#content-hash", 
            "text": "The   element contains a hash of the account content that can be used by the client to determine whether the content has changed. This can be used in conjunction with the summary parameter to optimize network bandwidth usage. The algorithm used to generate the hash may be changed in later revisions, so the client should not treat the contentHash as anything other than an opaque string or make assumptions about the length or format.", 
            "title": "Content Hash"
        }, 
        {
            "location": "/accounts-service/#published", 
            "text": "Indicates whether the account is published. Published accounts are presented to the user by preference over unpublished accounts.  Note : The xs:boolean type allows \u2018true\u2019/\u2019false\u2019 or, equivalently, \u20181\u2019/\u20190\u2019 values to be used so clients should parse both correctly.", 
            "title": "Published"
        }, 
        {
            "location": "/accounts-service/#metadata", 
            "text": "From the Accounts Xml format, metadata (plug-ins, trust settings and properties) can be specified at the account or individual service level. Metadata specified at the account level should be assumed to apply to all services in the account, individual services may choose to add extra metadata or override the account-level values.", 
            "title": "MetaData"
        }, 
        {
            "location": "/accounts-service/#plug-ins", 
            "text": "The plug-in values which may be returned by the account service are as follows:     Plug-in value  Description      A9852000-047D-11DD-95FF-0800200C9A66  Receiver (Online)    2C882560-4469-4E65-9EBE-4A842840F273  Offline Plug-in    b9852000-041d-11ff-25ff-0800400c9a66  VPN    73cf72ab-2528-4836-8b69-062a92da02bb  ShareFile Outlook Plug-in    18952f2a-6e32-4606-9cc2-48dab425ba36  ShareFile Desktop Widget    DF0F00A4-BB7E-4af5-915F-F0A674B2264A  HDX RealTime Media Engine (aka \u2018Lync Accelerator\u2019) from Acosta.    4122F203-D87B-4e9c-BE7A-222E4E8A9C6F  Acceleration Plug-in (not returned by StoreFront Services 1.2)     Note : These are equivalent values to those used by Merchandising Server", 
            "title": "Plug-ins"
        }, 
        {
            "location": "/accounts-service/#trust-settings", 
            "text": "These specify the trust settings for various aspects of the client. Values can be Yes, No or Ask, indicating whether settings should be enabled, disabled or whether the user should be prompted to choose.", 
            "title": "Trust Settings"
        }, 
        {
            "location": "/accounts-service/#properties", 
            "text": "These allow arbitrary data to be associated with a service and are intended as an extension mechanism.     Response Format  Request Accept /Response Content-Type Header      Xml  application/vnd.citrix.roamingaccounts+xml", 
            "title": "Properties"
        }, 
        {
            "location": "/accounts-service/#account-service-example", 
            "text": "This is an example of a client discovering the latest account information for a user. It assumes that the client has already authenticated and has a suitable authorization token, so the authentication exchange is not shown. This example illustrates the use of contentHash and the summary request. This does not imply that using the summary request is necessarily the best way to query account information as the cost of two network round-trips may outweigh the saved bandwidth for occasions where the second request is saved because the account data has not changed.", 
            "title": "Account Service Example"
        }, 
        {
            "location": "/accounts-service/#example-request-summary-account-data", 
            "text": "In this example, the client requests summary account data to find out if any of the accounts have changed, been added or removed since the client last retrieved account data, which it has cached, including the contentHash values:", 
            "title": "Example: Request Summary Account Data"
        }, 
        {
            "location": "/accounts-service/#request_1", 
            "text": "GET https://storefront01/Citrix/Roaming/accounts/?summary HTTP/1.1 Accept: application/vnd.citrix.roamingaccounts+xml\nAuthorization: CitrixAuth H4sIAA........\nHost: storefront01  Response\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.roamingaccounts+xml Content-Length: xxxxx ?xml version=\u201d1.0\u201d encoding=\u201dutf-8\u201d  accounts   xmlns= http://citrix.com/delivery-services/2-1/accounts  xmlns:sr= http://www.citrix.com/ServiceRecord   account  id  775552B2-3E81-4FDA-93D1-CE0374E902AD /id   name Store /name  description /description   published true /published   contentHash AAA34596786767...345DEF /contentHash \n   /account \n   account  id 1234DEF-1111-4FDA-5555-1234567890 /id   name Store2 /name  description /description   published false /published   contentHash BBB3373737377...123CCC /contentHash  /account  /accounts   The data has changed so the client requests the full data:", 
            "title": "Request"
        }, 
        {
            "location": "/accounts-service/#request_2", 
            "text": "GET https://storefront01/Citrix/Roaming/accounts/ HTTP/1.1\nAccept: */*\nAuthorization: CitrixAuth H4sIAA........\nHost: storefront01\nResponse\nHTTP/1.1 200 OK\nCache-Control: public, no-store, max-age=0\nContent-Type: application/vnd.citrix.roamingaccounts+xml Content-Length: xxxxx  ?xml version=\u201d1.0\u201d encoding=\u201dutf-8\u201d  accounts   xmlns= http://citrix.com/delivery-services/2-1/accounts  xmlns:sr= http://www.citrix.com/ServiceRecord   account  id  775552B2-3E81-4FDA-93D1-CE0374E902AD /id   name Store /name  description /description   published true /published   contentHash AAA34596786767...345DEF /contentHash   details \n       updaterType citrix /updaterType \n       annotatedServices \n        !-- Store service -- \n        annotatedService \n          sr:Service   type= \u201dStore\u201d  sr:SRID 1231231232312312 /sr:SRID  sr:Name Store /sr:Name   sr:Address https://storefront01/Citrix/Store/discovery /sr:Address   sr:Gateways \n              sr:Gateway   ... ... /sr:Gateway \n            /sr:Gateways \n            sr:Beacons  sr:Internal   sr:Beacon https://storefront01/Citrix/Store/discovery /sr:Beacon \n              /sr:Internal \n              sr:External  sr:Beacon http://www.example.com /sr:Beacon  sr:Beacon http://www.microsoft.com /sr:Beacon   /sr:External \n            /sr:Beacons \n          /sr:Service \n          metadata \n            plugins/ \n            trustSettings/ \n            properties/ \n          /metadata \n        /annotatedService \n        !-- VPN service has gateways but no beacons or address -- \n        annotatedService  sr:Service   type= \u201dVPN\u201d   sr:SRID 454545454545454545454 /sr:SRID   sr:Name VPN /sr:Name   sr:Address /sr:Address \n            sr:Gateways \n              sr:Gateway   ... ... /sr:Gateway \n            /sr:Gateways \n            sr:Beacons/ \n          /sr:Service \n          metadata \n            plugins/ \n            trustSettings/ \n            properties/ \n          /metadata \n        /annotatedService \n       /annotatedServices \n       metadata  plugins \n           !-- offline   vpn plugins -- \n           plugin A9852000-047D-11DD-95FF-0800200C9A66 /plugin  plugin b9852000-041d-11ff-25ff-0800400c9a66 /plugin   /plugins  trustSettings/  properties/ \n       /metadata \n     /details \n   /account \n   account  id 1234DEF-1111-4FDA-5555-1234567890 /id   name Store2 /name  description /description   published false /published   contentHash BBB3373737377...123CCC /contentHash   details \n       ...\n     /details \n   /account  /accounts", 
            "title": "Request"
        }, 
        {
            "location": "/appendix/", 
            "text": "Appendix A: Keywords and Properties Parsing\n\n\nThe resource enumeration Xml return by the resource enumeration service contains keywords and properties elements. For resources derived from XenApp, XenDesktop or VDI-in-a-Box, these values are generated from mark-up in the description field of the corresponding resource. The description field is then 'tidied up' to remove this mark-up.\n\n\nThe keyword/property parser looks for the string KEYWORDS: (case-insensitive). If found, all text after that string is treated as keyword/property mark-up. The mark-up is made up of the following tokens separated by one or more spaces:\n\n\n\n\n=\n\n\n=\"\n\"\n\n\n\n\n\n\nWhere:\n\n\n\n\n, \n and \n are strings made up of any characters other than space, = or \"\n\n\n is a string made up of any character other than \"\n\n\n\n\nThe keywords are collected into a single list.\n\n\nAll property entries with the same property name are collected togther to give a multiple-valued property. \n\n\nSome concrete examples:\n\n\n\n\n\n\n\n\nOriginal Description in XenApp/XenDesktop (plus comment)\n\n\nDescription as returned by StoreFront Services.\n\n\nKeywords\n\n\nProperties\n\n\n\n\n\n\n\n\n\n\n\"My description\" \n (Basic desciption without mark-up)\n\n\n\"My description\"\n\n\n\\\n\n\n\\\n\n\n\n\n\n\n\"My description KEYWORDS: kw1 kw2 (Description with keyword mark-up)\n\n\n\"My description\"\n\n\n\\\n \n\\\nkw1\\\n \n\\\nkw2\\\n \\\n\n\n\\\n\n\n\n\n\n\n\"My description keywords: name1=a name2=b name1=\"the rain in Spain\" (Description with keyword and property mark-up)\n\n\n\"My description\"\n\n\n\\\n\n\n\\\n\\\n\\\na\\\n\\\nThe rain in Spain\\\n \\\n\\\n\\\nb\\\n\\\n\\\n\n\n\n\n\n\n\"My description keywords: name1=a name2=b\" (Description with misformatted mark-up - a misspelled KEYWORDS: token)\n\n\n\"My description keywrds: name1=a name2=b \"\n\n\n\\\n\n\n\\\n\n\n\n\n\n\n\"My description KEYWORDS: kw1 name1=a kw2 name2=b kw3\" (Description with interspersed keywords and properties.)\n\n\n\"My description\"\n\n\n\\\n \n\\\nkw1\\\n \n\\\nkw2\\\n\\\nkw3\\\n\\\n\n\n\\\n\\\n\\\na\\\n \n\\\n\\\n\\\nb\\\n\\\n\\\n\n\n\n\n\n\n\"My description KEYWORDS: name1=a Name1=b \"(Property names are case- sensitive.)\n\n\n\"My description\"\n\n\n\\\n\n\n\\\n\\\na\\\n\\\n\\\n\\\nb\\\n\\\n\\", 
            "title": "Appendix"
        }, 
        {
            "location": "/appendix/#appendix-a-keywords-and-properties-parsing", 
            "text": "The resource enumeration Xml return by the resource enumeration service contains keywords and properties elements. For resources derived from XenApp, XenDesktop or VDI-in-a-Box, these values are generated from mark-up in the description field of the corresponding resource. The description field is then 'tidied up' to remove this mark-up.  The keyword/property parser looks for the string KEYWORDS: (case-insensitive). If found, all text after that string is treated as keyword/property mark-up. The mark-up is made up of the following tokens separated by one or more spaces:   =  =\" \"    Where:   ,   and   are strings made up of any characters other than space, = or \"   is a string made up of any character other than \"   The keywords are collected into a single list.  All property entries with the same property name are collected togther to give a multiple-valued property.   Some concrete examples:     Original Description in XenApp/XenDesktop (plus comment)  Description as returned by StoreFront Services.  Keywords  Properties      \"My description\"   (Basic desciption without mark-up)  \"My description\"  \\  \\    \"My description KEYWORDS: kw1 kw2 (Description with keyword mark-up)  \"My description\"  \\   \\ kw1\\   \\ kw2\\  \\  \\    \"My description keywords: name1=a name2=b name1=\"the rain in Spain\" (Description with keyword and property mark-up)  \"My description\"  \\  \\ \\ \\ a\\ \\ The rain in Spain\\  \\ \\ \\ b\\ \\ \\    \"My description keywords: name1=a name2=b\" (Description with misformatted mark-up - a misspelled KEYWORDS: token)  \"My description keywrds: name1=a name2=b \"  \\  \\    \"My description KEYWORDS: kw1 name1=a kw2 name2=b kw3\" (Description with interspersed keywords and properties.)  \"My description\"  \\   \\ kw1\\   \\ kw2\\ \\ kw3\\ \\  \\ \\ \\ a\\   \\ \\ \\ b\\ \\ \\    \"My description KEYWORDS: name1=a Name1=b \"(Property names are case- sensitive.)  \"My description\"  \\  \\ \\ a\\ \\ \\ \\ b\\ \\ \\", 
            "title": "Appendix A: Keywords and Properties Parsing"
        }
    ]
}